// Declarations for java.security.Signature
// Declarations written Tue Feb 07 14:47:27 GMT-08:00 2012

decl-version 2.0
var-comparability none

ppt java.security.Signature.Signature(java.lang.String):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags synthetic to_string
    comparability 22

ppt java.security.Signature.Signature(java.lang.String):::EXIT137
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String):::EXIT207
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String):::EXIT201
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(sun.security.jca.GetInstance$Instance,\_java.lang.String):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type sun.security.jca.GetInstance$Instance
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.getInstance(sun.security.jca.GetInstance$Instance,\_java.lang.String):::EXIT225
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type sun.security.jca.GetInstance$Instance
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature.isSpi(java.security.Provider$Service):::EXIT249
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature.isSpi(java.security.Provider$Service):::EXIT270
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.lang.String):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.lang.String):::EXIT326
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.lang.String):::EXIT322
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.security.Provider):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.security.Provider):::EXIT369
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstance(java.lang.String,\_java.security.Provider):::EXIT365
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstanceRSA(java.security.Provider):::ENTER
ppt-type enter
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.getInstanceRSA(java.security.Provider):::EXIT380
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getInstanceRSA(java.security.Provider):::EXIT385
ppt-type subexit
parent parent java.security.Signature:::CLASS 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.Signature
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.algorithm
    var-kind field algorithm
    enclosing-var return
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.algorithm.toString
    var-kind function toString()
    enclosing-var return.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable return.provider
    var-kind field provider
    enclosing-var return
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.provider.getClass()
    var-kind function getClass()
    enclosing-var return.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return.provider
    flags nomod synthetic classname
    comparability 22
  variable return.state
    var-kind field state
    enclosing-var return
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.getProvider():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.getProvider():::EXIT401
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.chooseFirstProvider():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.chooseFirstProvider():::EXIT406
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.initVerify(java.security.PublicKey):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PublicKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PublicKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initVerify(java.security.cert.Certificate):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.cert.Certificate
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initVerify(java.security.cert.Certificate):::EXIT466
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.cert.Certificate
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initSign(java.security.PrivateKey):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initSign(java.security.PrivateKey):::EXIT482
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.initSign(java.security.PrivateKey,\_java.security.SecureRandom):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature.initSign(java.security.PrivateKey,\_java.security.SecureRandom):::EXIT500
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature.sign():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.sign():::EXIT522
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type byte[]
    rep-type hashcode
    flags nomod
    comparability 22
  variable return[..]
    var-kind array 
    enclosing-var return
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature.sign(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.sign(byte[],\_int,\_int):::EXIT569
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature.verify(byte[]):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature.verify(byte[]):::EXIT592
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature.verify(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.verify(byte[],\_int,\_int):::EXIT634
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature.update(byte):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.update(byte):::EXIT655
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.update(byte[]):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature.update(byte[]):::EXIT668
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature.update(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.update(byte[],\_int,\_int):::EXIT689
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature.update(java.nio.ByteBuffer):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.update(java.nio.ByteBuffer):::EXIT713
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.getAlgorithm():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.getAlgorithm():::EXIT721
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.toString
    var-kind function toString()
    enclosing-var return
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.toString():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.toString():::EXIT744
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.toString
    var-kind function toString()
    enclosing-var return
    dec-type java.lang.String
    rep-type java.lang.String
    function-args return
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.setParameter(java.lang.String,\_java.lang.Object):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Object
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.setParameter(java.lang.String,\_java.lang.Object):::EXIT776
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Object
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.setParameter(java.security.spec.AlgorithmParameterSpec):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.spec.AlgorithmParameterSpec
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.setParameter(java.security.spec.AlgorithmParameterSpec):::EXIT791
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.spec.AlgorithmParameterSpec
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.getParameters():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.getParameters():::EXIT809
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.security.AlgorithmParameters
    rep-type hashcode
    flags nomod
    comparability 22

ppt java.security.Signature.getParameter(java.lang.String):::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature.getParameter(java.lang.String):::EXIT838
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature.clone():::ENTER
ppt-type enter
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1

ppt java.security.Signature.clone():::EXIT851
ppt-type subexit
parent parent java.security.Signature:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature:::CLASS
ppt-type class
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature:::OBJECT
ppt-type object
parent parent java.security.Signature:::CLASS 1
  variable this
    var-kind variable 
    dec-type java.security.Signature
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
  variable java.security.Signature.debug
    var-kind variable 
    dec-type sun.security.util.Debug
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable this.algorithm
    var-kind field algorithm
    enclosing-var this
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.algorithm.toString
    var-kind function toString()
    enclosing-var this.algorithm
    dec-type java.lang.String
    rep-type java.lang.String
    function-args this.algorithm
    flags nomod synthetic to_string
    comparability 22
  variable this.provider
    var-kind field provider
    enclosing-var this
    dec-type java.security.Provider
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.provider.getClass()
    var-kind function getClass()
    enclosing-var this.provider
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.provider
    flags nomod synthetic classname
    comparability 22
  variable java.security.Signature.UNINITIALIZED
    var-kind variable 
    dec-type int
    rep-type int
    constant 0
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.SIGN
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.VERIFY
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable this.state
    var-kind field state
    enclosing-var this
    dec-type int
    rep-type int
    flags nomod
    comparability 22
  variable java.security.Signature.RSA_SIGNATURE
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_SIGNATURE.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_SIGNATURE
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_SIGNATURE
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.RSA_CIPHER.toString
    var-kind function toString()
    enclosing-var java.security.Signature.RSA_CIPHER
    dec-type java.lang.String
    rep-type java.lang.String
    function-args java.security.Signature.RSA_CIPHER
    flags nomod synthetic to_string
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds
    var-kind variable 
    dec-type java.util.List
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..]
    var-kind array 
    enclosing-var java.security.Signature.rsaIds
    array 1
    dec-type java.util.List
    rep-type hashcode[]
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds[..].getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds[..]
    array 1
    dec-type java.lang.Class[]
    rep-type java.lang.String[]
    function-args java.security.Signature.rsaIds[]
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.rsaIds.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.rsaIds
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.rsaIds
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo
    var-kind variable 
    dec-type java.util.Map
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature:::CLASS 1
  variable java.security.Signature.signatureInfo.getClass()
    var-kind function getClass()
    enclosing-var java.security.Signature.signatureInfo
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args java.security.Signature.signatureInfo
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature:::CLASS 1

ppt java.security.SignatureSpi.SignatureSpi():::ENTER
ppt-type enter

ppt java.security.SignatureSpi.SignatureSpi():::EXIT40
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1

ppt java.security.SignatureSpi.engineInitSign(java.security.PrivateKey,\_java.security.SecureRandom):::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureSpi.engineInitSign(java.security.PrivateKey,\_java.security.SecureRandom):::EXIT87
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer):::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer):::EXIT126
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer):::EXIT151
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.SignatureSpi.engineSign(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.SignatureSpi.engineSign(byte[],\_int,\_int):::EXIT220
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.SignatureSpi.engineVerify(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.SignatureSpi.engineVerify(byte[],\_int,\_int):::EXIT261
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.SignatureSpi.engineSetParameter(java.security.spec.AlgorithmParameterSpec):::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.spec.AlgorithmParameterSpec
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.SignatureSpi.engineGetParameters():::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1

ppt java.security.SignatureSpi.clone():::ENTER
ppt-type enter
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1

ppt java.security.SignatureSpi.clone():::EXIT368
ppt-type subexit
parent parent java.security.SignatureSpi:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.SignatureSpi:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.SignatureSpi:::OBJECT
ppt-type object
  variable this
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable this.getClass()
    var-kind function getClass()
    enclosing-var this
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this
    flags nomod synthetic classname
    comparability 22
  variable this.appRandom
    var-kind field appRandom
    enclosing-var this
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22

ppt java.security.SignatureException.SignatureException():::ENTER
ppt-type enter

ppt java.security.SignatureException.SignatureException():::EXIT28
ppt-type subexit
parent parent java.security.SignatureException:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureException
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1

ppt java.security.SignatureException.SignatureException(java.lang.String):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
ppt-type subexit
parent parent java.security.SignatureException:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureException
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.SignatureException.SignatureException(java.lang.String,\_java.lang.Throwable):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Throwable
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureException.SignatureException(java.lang.String,\_java.lang.Throwable):::EXIT54
ppt-type subexit
parent parent java.security.SignatureException:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureException
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Throwable
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureException.SignatureException(java.lang.Throwable):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.lang.Throwable
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureException.SignatureException(java.lang.Throwable):::EXIT69
ppt-type subexit
parent parent java.security.SignatureException:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureException
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22
    parent java.security.SignatureException:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.Throwable
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.SignatureException:::CLASS
ppt-type class
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22

ppt java.security.SignatureException:::OBJECT
ppt-type object
parent parent java.security.SignatureException:::CLASS 1
  variable this
    var-kind variable 
    dec-type java.security.SignatureException
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable java.security.SignatureException.serialVersionUID
    var-kind variable 
    dec-type long
    rep-type int
    constant 7509989324975124438
    flags nomod
    comparability 22
    parent java.security.SignatureException:::CLASS 1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
0
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
1
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
1
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

ppt java.security.Signature$Delegate.Signature$Delegate(java.security.SignatureSpi,\_java.lang.String):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg0.appRandom
    var-kind field appRandom
    enclosing-var arg0
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature$Delegate.Signature$Delegate(java.security.SignatureSpi,\_java.lang.String):::EXIT893
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg0.appRandom
    var-kind field appRandom
    enclosing-var arg0
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.toString
    var-kind function toString()
    enclosing-var arg1
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service,\_java.util.Iterator,\_java.lang.String):::ENTER
ppt-type enter
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.util.Iterator
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg2.toString
    var-kind function toString()
    enclosing-var arg2
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg2
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service,\_java.util.Iterator,\_java.lang.String):::EXIT901
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.util.Iterator
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg2.toString
    var-kind function toString()
    enclosing-var arg2
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg2
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature$Delegate.clone():::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.clone():::EXIT921
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
ppt-type subexit
parent parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.appRandom
    var-kind field appRandom
    enclosing-var return
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT933
ppt-type subexit
parent parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable arg0
    var-kind variable 
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22
  variable return.appRandom
    var-kind field appRandom
    enclosing-var return
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.chooseFirstProvider():::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.chooseFirstProvider():::EXIT993
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.chooseFirstProvider():::EXIT961
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.chooseProvider(int,\_java.security.Key,\_java.security.SecureRandom):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Key
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.chooseProvider(int,\_java.security.Key,\_java.security.SecureRandom):::EXIT1038
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Key
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.chooseProvider(int,\_java.security.Key,\_java.security.SecureRandom):::EXIT1012
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.Key
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.init(java.security.SignatureSpi,\_int,\_java.security.Key,\_java.security.SecureRandom):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg0.appRandom
    var-kind field appRandom
    enclosing-var arg0
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.security.Key
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg2.getClass()
    var-kind function getClass()
    enclosing-var arg2
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg2
    flags nomod synthetic classname
    comparability 22
  variable arg3
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.init(java.security.SignatureSpi,\_int,\_java.security.Key,\_java.security.SecureRandom):::EXIT1081
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg0.appRandom
    var-kind field appRandom
    enclosing-var arg0
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type java.security.Key
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg2.getClass()
    var-kind function getClass()
    enclosing-var arg2
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg2
    flags nomod synthetic classname
    comparability 22
  variable arg3
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PublicKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PublicKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineInitSign(java.security.PrivateKey):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineInitSign(java.security.PrivateKey):::EXIT1099
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineInitSign(java.security.PrivateKey,\_java.security.SecureRandom):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineInitSign(java.security.PrivateKey,\_java.security.SecureRandom):::EXIT1108
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.PrivateKey
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(byte):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(byte):::EXIT1113
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(byte[],\_int,\_int):::EXIT1119
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(java.nio.ByteBuffer):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineUpdate(java.nio.ByteBuffer):::EXIT1124
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.nio.ByteBuffer
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineSign():::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.engineSign():::EXIT1128
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable return
    var-kind return 
    dec-type byte[]
    rep-type hashcode
    flags nomod
    comparability 22
  variable return[..]
    var-kind array 
    enclosing-var return
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.engineSign(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineSign(byte[],\_int,\_int):::EXIT1134
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type int
    rep-type int
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.engineVerify(byte[],\_int,\_int):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22

ppt java.security.Signature$Delegate.engineVerify(byte[],\_int,\_int):::EXIT1146
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type byte[]
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0[..]
    var-kind array 
    enclosing-var arg0
    array 1
    dec-type byte[]
    rep-type int[]
    flags nomod
    comparability 22
  variable arg1
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable arg2
    var-kind variable 
    dec-type int
    rep-type int
    flags is_param nomod
    comparability 22
  variable return
    var-kind return 
    dec-type boolean
    rep-type boolean
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate.engineSetParameter(java.lang.String,\_java.lang.Object):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Object
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineSetParameter(java.lang.String,\_java.lang.Object):::EXIT1153
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable arg1
    var-kind variable 
    dec-type java.lang.Object
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg1.getClass()
    var-kind function getClass()
    enclosing-var arg1
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg1
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineSetParameter(java.security.spec.AlgorithmParameterSpec):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.spec.AlgorithmParameterSpec
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineSetParameter(java.security.spec.AlgorithmParameterSpec):::EXIT1159
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.security.spec.AlgorithmParameterSpec
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.getClass()
    var-kind function getClass()
    enclosing-var arg0
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineGetParameter(java.lang.String):::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22

ppt java.security.Signature$Delegate.engineGetParameter(java.lang.String):::EXIT1164
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable arg0
    var-kind variable 
    dec-type java.lang.String
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable arg0.toString
    var-kind function toString()
    enclosing-var arg0
    dec-type java.lang.String
    rep-type java.lang.String
    function-args arg0
    flags nomod synthetic to_string
    comparability 22
  variable return
    var-kind return 
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable return.getClass()
    var-kind function getClass()
    enclosing-var return
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args return
    flags nomod synthetic classname
    comparability 22

ppt java.security.Signature$Delegate.engineGetParameters():::ENTER
ppt-type enter
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1

ppt java.security.Signature$Delegate.engineGetParameters():::EXIT1169
ppt-type subexit
parent parent java.security.Signature$Delegate:::OBJECT 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::OBJECT 1
  variable return
    var-kind return 
    dec-type java.security.AlgorithmParameters
    rep-type hashcode
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate:::CLASS
ppt-type class
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22

ppt java.security.Signature$Delegate:::OBJECT
ppt-type object
parent parent java.security.Signature$Delegate:::CLASS 1
  variable this
    var-kind variable 
    dec-type java.security.Signature$Delegate
    rep-type hashcode
    flags is_param nomod
    comparability 22
  variable this.sigSpi
    var-kind field sigSpi
    enclosing-var this
    dec-type java.security.SignatureSpi
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.sigSpi.getClass()
    var-kind function getClass()
    enclosing-var this.sigSpi
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.sigSpi
    flags nomod synthetic classname
    comparability 22
  variable this.sigSpi.appRandom
    var-kind field appRandom
    enclosing-var this.sigSpi
    dec-type java.security.SecureRandom
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.lock
    var-kind field lock
    enclosing-var this
    dec-type java.lang.Object
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.lock.getClass()
    var-kind function getClass()
    enclosing-var this.lock
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.lock
    flags nomod synthetic classname
    comparability 22
  variable this.firstService
    var-kind field firstService
    enclosing-var this
    dec-type java.security.Provider$Service
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.serviceIterator
    var-kind field serviceIterator
    enclosing-var this
    dec-type java.util.Iterator
    rep-type hashcode
    flags nomod
    comparability 22
  variable this.serviceIterator.getClass()
    var-kind function getClass()
    enclosing-var this.serviceIterator
    dec-type java.lang.Class
    rep-type java.lang.String
    function-args this.serviceIterator
    flags nomod synthetic classname
    comparability 22
  variable java.security.Signature$Delegate.warnCount
    var-kind variable 
    dec-type int
    rep-type int
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PUB
    var-kind variable 
    dec-type int
    rep-type int
    constant 1
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV
    var-kind variable 
    dec-type int
    rep-type int
    constant 2
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1
  variable java.security.Signature$Delegate.I_PRIV_SR
    var-kind variable 
    dec-type int
    rep-type int
    constant 3
    flags nomod
    comparability 22
    parent java.security.Signature$Delegate:::CLASS 1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
2
arg0
249036123
1
arg1
1757214720
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
3
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
4

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
4
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
3
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
2
this
1312685496
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1757214720
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
1757214720
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
0
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1
return
1312685496
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
739696645
1
return.algorithm.toString
"DSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
5
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1411318080
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
6
this
1312685496
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1757214720
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1411318080
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
7
this
1312685496
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1757214720
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1411318080
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
8
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
8
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
9
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
10

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
10
this
1436549872
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
9
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
1436549872
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
11
this
1312685496
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1757214720
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1436549872
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1411318080
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
11
this
1312685496
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1757214720
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1436549872
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1411318080
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
7
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1411318080
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
6
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1411318080
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
5
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1411318080
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
12
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
13
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
14
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
15
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
15
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
14
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
13
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
12
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31655992
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
16
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1659944186
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
17
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1659944186
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
18
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
18
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
17
this
1312685496
1
this.sigSpi
1436549872
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1803860955
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1659944186
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
16
this
1312685496
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1659944186
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
19
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
20
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
20
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
21
arg0
249036123
1
arg1
424399556
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
22
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
23

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
23
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
22
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
21
this
1090146005
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
424399556
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
424399556
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
19
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1
return
1090146005
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
739696645
1
return.algorithm.toString
"DSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
24
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
538608327
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
25
this
1090146005
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
424399556
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
538608327
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
26
this
1090146005
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
424399556
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
538608327
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
27
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
27
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
28
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
29

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
29
this
746579784
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
28
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
746579784
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
30
this
1090146005
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
424399556
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
746579784
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
538608327
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
30
this
1090146005
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
424399556
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
746579784
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
538608327
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
26
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
538608327
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
25
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
538608327
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
24
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
538608327
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
31
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
32
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
33
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
34
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
34
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
33
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
32
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
31
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
19480267
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
35
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
987333125
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
36
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
987333125
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
37
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
37
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
36
this
1090146005
1
this.sigSpi
746579784
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1900913478
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
987333125
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
35
this
1090146005
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
987333125
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
38
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
39
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
39
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
40
arg0
249036123
1
arg1
2030679283
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
41
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
42

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
42
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
41
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
40
this
1816591257
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2030679283
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
2030679283
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
38
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1
return
1816591257
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
739696645
1
return.algorithm.toString
"DSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
43
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1945607428
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
44
this
1816591257
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2030679283
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1945607428
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
45
this
1816591257
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2030679283
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1945607428
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
46
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
46
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
47
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
48

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
48
this
90549527
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
47
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
90549527
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
49
this
1816591257
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2030679283
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
90549527
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1945607428
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
49
this
1816591257
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2030679283
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
90549527
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1945607428
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
45
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1945607428
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
44
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1945607428
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
43
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1945607428
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
50
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
51
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
52
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
53
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
53
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
52
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
51
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
50
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1447478213
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
54
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1071572675
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
55
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1071572675
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
56
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
56
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
55
this
1816591257
1
this.sigSpi
90549527
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
674247000
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1071572675
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
54
this
1816591257
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1071572675
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
57
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
58
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
58
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
59
arg0
249036123
1
arg1
1877121038
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
60
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
61

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
61
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
60
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
59
this
91027589
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1877121038
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
1877121038
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
739696645
1
arg2.toString
"DSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
57
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
739696645
1
arg0.toString
"DSA"
1
return
91027589
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
739696645
1
return.algorithm.toString
"DSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
62
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1762757286
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
63
this
91027589
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1877121038
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1762757286
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
64
this
91027589
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1877121038
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1762757286
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
65
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
65
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
66
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
67

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
67
this
1788177143
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
66
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
1788177143
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
68
this
91027589
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1877121038
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1788177143
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1762757286
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
68
this
91027589
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1877121038
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1788177143
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1762757286
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
64
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1762757286
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
63
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1762757286
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
62
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1762757286
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
69
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
70
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
71
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
72
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
72
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
71
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
70
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1
arg1
0
1
arg2
46
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
69
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
498001447
1
arg0[..]
[67 117 61 70 114 101 100 101 114 105 107 95 68 105 101 116 122 10 67 111 61 79 112 101 110 83 111 117 114 99 101 10 68 109 61 102 97 108 115 101 10 69 120 61 48 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
73
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
35207469
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
74
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
35207469
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
75
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
75
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
74
this
91027589
1
this.sigSpi
1788177143
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
892331659
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
35207469
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
73
this
91027589
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
739696645
1
this.algorithm.toString
"DSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
35207469
1
arg0[..]
[48 44 2 20 8 -75 74 11 4 30 121 54 43 25 81 -23 -3 -71 -81 -22 -48 -21 -5 -35 2 20 9 -12 -125 11 74 -40 50 118 99 -120 16 124 -79 -45 -127 38 -87 71 60 12]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
76
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
313874500
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
77
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
77
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
78
arg0
1068884468
1
arg1
1040546521
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
313874500
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
79
arg0
313874500
1
arg0.toString
"SHA1withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
80

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
80
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
79
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
313874500
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
78
this
1506040926
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1040546521
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
arg1
1040546521
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
313874500
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
76
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
313874500
1
arg0.toString
"SHA1withRSA"
1
return
1506040926
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
313874500
1
return.algorithm.toString
"SHA1withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
81
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
82
this
1506040926
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1040546521
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
83
this
1506040926
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1040546521
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
84
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
84
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
85
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
86

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
86
this
1967250216
1
this.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
85
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
return
1967250216
1
return.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
87
this
1506040926
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1040546521
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1967250216
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
87
this
1506040926
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1040546521
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1967250216
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
83
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
82
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
81
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
88
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1294288542
1
arg0[..]

1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
89
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1294288542
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 74 119 53 115 75 120 55 111 115 86 48 120 122 100 79 115 117 67 87 87 51 67 114 122 87 122 107 61 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 73 115 116 105 75 52 55 55 112 103 51 47 83 101 122 65 65 99 75 81 70 116 116 75 54 54 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 116 74 73 52 98 98 54 73 74 114 83 103 54 78 111 121 88 69 78 49 54 57 74 89 83 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 106 53 99 75 55 80 71 74 75 107 79 104 82 87 68 48 113 56 68 52 122 113 83 79 88 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 80 75 67 83 49 50 80 66 69 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 71 100 84 117 83 79 101 88 109 114 118 83 66 54 110 97 102 51 56 86 90 108 112 107 110 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 43 113 118 50 77 71 100 66 112 120 108 118 102 109 101 111 70 80 109 68 71 99 65 97 101 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 67 110 76 104 120 65 99 108 99 51 43 75 49 66 83 86 116 88 119 84 77 75 122 56 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 97 101 79 121 57 70 107 119 77 84 82 105 111 82 76 57 114 49 115 57 114 88 87 75 84 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 55 97 72 69 104 67 77 82 88 65 70 57 112 118 80 56 102 102 89 49 119 114 80 97 78 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 106 81 43 54 48 86 53 66 113 122 113 51 106 117 90 107 57 114 97 57 122 110 120 54 121 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 101 114 103 52 55 116 69 87 73 106 121 110 74 50 122 99 83 73 83 112 103 75 47 85 112 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 118 67 102 82 120 97 50 107 90 84 86 104 71 119 56 67 112 78 70 57 111 106 85 112 47 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 120 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 111 77 115 84 108 81 43 120 109 77 117 79 121 49 99 89 54 114 111 90 97 74 68 85 112 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 79 53 111 88 78 80 106 72 99 76 87 102 53 86 110 71 78 47 120 104 53 47 109 74 43 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 112 47 107 107 89 99 49 53 106 109 113 79 113 52 70 52 70 100 81 50 81 105 77 99 107 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 51 84 108 72 75 102 55 85 47 84 89 117 70 103 86 83 86 56 66 84 68 99 121 85 76 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 108 43 84 56 117 106 80 74 72 68 57 98 111 67 69 50 86 87 83 71 104 116 72 111 76 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 72 103 55 90 107 56 115 120 78 56 66 105 71 67 86 50 51 77 53 80 88 109 88 50 84 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 105 85 114 87 100 82 47 113 77 72 51 122 72 103 47 48 67 106 72 56 54 54 75 103 116 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 51 104 108 87 89 120 56 68 79 55 112 109 118 116 105 66 85 49 117 76 113 71 87 76 88 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 114 105 118 97 116 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 80 119 70 99 117 113 81 88 51 74 78 118 88 89 65 119 57 110 101 110 88 103 87 101 72 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 108 120 99 99 78 114 87 117 69 104 43 88 69 81 81 103 70 109 83 120 82 108 102 80 73 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 113 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 76 104 108 99 70 54 68 69 110 67 77 76 118 43 50 83 97 70 112 114 86 48 84 90 70 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 71 75 79 75 113 48 102 75 80 71 47 113 87 121 73 104 53 121 79 74 107 111 82 76 87 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 108 112 84 107 71 83 51 84 77 70 115 56 53 86 100 84 119 78 70 68 48 103 101 119 82 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 55 78 52 103 109 68 79 50 115 119 119 86 109 111 111 97 97 76 109 74 113 90 108 70 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 110 70 104 43 119 100 120 110 107 100 67 122 98 89 116 83 85 119 110 83 55 72 116 87 82 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 82 66 87 101 82 67 104 103 73 68 119 119 98 108 57 109 86 87 118 65 113 115 113 104 85 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 66 50 108 80 49 47 100 49 100 87 117 85 48 100 107 88 88 57 111 98 68 53 84 116 108 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 117 98 108 105 99 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 115 117 51 67 72 56 102 79 53 106 99 111 120 121 105 101 85 99 105 67 71 89 79 54 109 69 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 79 65 69 80 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 113 90 118 122 57 47 99 120 122 101 74 47 56 97 53 112 83 98 78 50 110 56 67 84 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 79 75 86 67 112 72 98 114 55 48 118 81 76 106 106 98 122 100 108 43 105 56 118 54 98 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 102 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 74 75 51 67 79 111 50 99 102 111 112 119 53 57 56 82 118 71 79 110 82 66 113 101 85 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 106 99 49 120 105 85 57 79 105 74 100 100 52 67 90 81 80 67 71 73 116 101 110 120 106 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 70 111 88 109 65 71 68 116 111 70 71 51 82 81 85 76 120 73 108 115 57 89 77 97 85 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 82 115 97 80 114 101 109 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 49 69 69 104 120 68 113 115 109 85 120 117 56 49 73 47 74 109 53 114 49 56 68 121 48 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 49 84 74 74 116 113 113 79 103 56 109 121 112 109 117 52 101 54 65 97 76 69 84 49 78 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 48 112 51 113 122 109 77 87 120 110 43 115 54 78 75 108 77 76 75 57 47 79 103 82 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 122 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 43 90 83 67 114 117 117 65 56 43 50 71 47 115 119 103 51 82 84 89 68 48 48 51 105 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 111 86 81 69 53 57 69 75 76 105 76 56 89 81 56 83 77 52 103 121 75 49 79 88 72 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 106 102 54 115 109 76 114 49 100 70 68 108 98 55 43 76 49 43 54 48 97 84 98 81 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 74 110 90 72 88 106 100 105 113 108 49 66 113 108 109 67 68 111 53 118 89 89 66 84 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 65 103 114 101 101 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 74 80 122 70 75 49 90 79 49 70 78 102 67 68 120 99 72 73 110 121 111 111 48 43 107 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 111 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 73 69 110 111 53 53 99 75 106 84 98 122 120 102 75 117 101 79 50 112 87 100 121 110 106 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 102 84 79 57 120 120 52 50 106 75 118 98 50 113 67 118 57 111 114 66 113 117 110 70 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 106 65 105 80 99 78 74 116 114 78 98 56 109 104 111 79 47 99 50 52 89 74 71 107 81 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 72 52 52 90 103 85 54 50 76 74 97 77 85 57 48 119 103 98 48 72 121 122 51 72 112 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 118 98 118 119 73 106 77 102 86 122 66 119 115 106 97 115 69 76 48 43 43 77 105 105 113 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 83 65 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 109 120 79 78 107 103 84 71 76 106 50 83 109 78 97 85 115 100 122 76 102 57 68 79 43 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 98 116 77 88 103 108 99 73 120 48 119 80 69 69 80 107 72 79 86 84 100 49 52 68 119 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 103 117 75 89 122 122 119 111 86 89 121 101 83 67 74 43 66 83 110 67 103 118 70 55 87 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 113 79 79 111 67 88 82 115 70 85 57 52 49 119 65 49 110 100 102 106 82 84 80 48 81 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 101 78 86 71 79 103 97 119 78 70 70 81 112 112 48 113 105 103 78 69 52 52 119 78 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 90 109 110 67 70 51 107 80 47 77 43 51 99 107 84 108 88 80 66 84 75 87 113 104 69 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 72 85 110 112 87 69 74 105 87 105 80 116 110 79 111 48 104 116 82 83 99 81 107 116 86 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 115 76 52 56 55 102 51 115 68 122 70 86 75 70 110 43 80 118 57 119 50 100 67 117 69 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 85 85 71 78 52 51 53 75 74 66 88 121 99 121 111 84 50 75 82 89 109 54 118 66 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 103 107 97 67 111 54 109 73 97 76 118 43 87 87 113 88 90 53 102 57 86 65 120 82 115 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 112 68 52 72 66 49 55 66 54 51 43 109 115 120 43 49 109 57 117 77 50 90 109 76 50 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 49 121 117 68 102 51 106 74 111 83 72 65 122 120 88 106 88 72 110 48 110 52 107 68 115 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 80 114 102 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 102 68 53 56 52 114 87 72 90 70 89 75 54 57 43 119 76 83 103 117 88 108 106 52 110 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 81 69 117 65 74 116 103 121 112 111 79 71 52 105 68 112 72 111 101 82 97 118 68 48 107 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 74 70 120 69 48 89 86 106 73 88 107 118 108 86 50 65 116 109 85 49 121 122 98 111 108 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 99 118 81 54 116 119 69 81 115 108 114 97 67 43 81 47 66 121 71 48 114 79 110 99 76 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 106 105 107 66 119 117 102 115 88 86 68 103 85 71 103 81 69 81 111 116 56 120 66 87 115 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 109 108 55 43 74 111 101 67 112 118 43 112 84 50 114 73 86 121 68 52 88 69 98 106 104 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 49 111 76 121 113 83 56 56 90 53 101 105 106 74 52 102 121 88 115 104 108 66 82 118 73 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 106 54 52 52 110 66 72 108 55 70 68 90 43 107 47 72 65 67 49 84 120 103 113 82 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 53 88 87 99 120 121 72 102 97 43 48 48 90 78 50 117 55 71 79 114 102 99 89 81 48 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 81 86 110 49 85 79 65 74 66 69 50 55 66 48 77 84 97 76 115 107 43 109 88 115 49 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 56 83 74 102 113 90 114 81 74 76 77 83 83 71 50 68 106 120 118 116 54 108 76 80 89 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 68 116 98 50 98 87 102 89 108 56 50 88 65 115 86 77 90 106 56 71 73 69 77 112 71 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 103 98 119 98 48 81 117 74 89 115 50 120 47 76 49 117 90 120 109 57 111 78 53 115 115 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 109 107 122 122 70 83 67 114 116 85 102 80 111 78 99 97 76 100 70 72 84 110 82 119 69 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 100 87 89 76 117 112 116 47 50 77 116 117 89 120 98 51 122 99 69 107 87 90 69 111 87 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 65 112 111 113 82 81 89 101 117 104 55 53 105 84 75 66 106 118 108 101 115 85 69 113 114 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 49 90 85 78 51 118 97 51 68 117 52 77 119 104 75 68 72 118 83 78 89 76 102 83 50 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 108 104 106 100 79 66 89 121 121 121 104 52 90 67 112 48 81 107 110 74 107 111 88 67 83 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 117 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 50 85 101 76 49 110 119 101 71 102 101 89 51 69 108 115 73 99 86 90 70 52 90 118 103 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 77 54 115 76 122 83 83 52 86 47 105 102 68 75 65 47 49 68 119 122 80 113 68 67 86 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 56 99 82 71 79 108 53 56 55 78 119 114 66 104 83 74 90 122 69 78 68 67 107 112 56 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 57 71 51 89 120 68 113 104 70 100 79 55 112 71 110 81 90 98 66 110 70 119 70 43 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 76 115 106 115 117 80 116 85 119 113 80 115 111 54 84 76 83 114 84 84 67 74 104 52 57 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 101 97 108 101 100 79 98 106 101 99 116 70 111 114 75 101 121 80 114 111 116 101 99 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 54 79 118 43 116 121 87 67 87 67 102 53 73 51 52 72 53 117 85 109 97 121 76 119 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 109 89 102 88 111 77 114 81 104 97 120 55 98 99 104 70 55 53 49 105 110 109 102 43 80 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 48 76 79 51 116 73 56 86 69 74 66 79 82 48 82 66 110 51 99 51 55 72 50 54 90 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 65 82 67 70 79 85 82 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 113 109 114 98 83 54 51 73 66 56 103 77 80 48 81 75 119 56 90 72 101 113 73 84 74 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 118 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 120 68 122 53 80 43 87 57 119 100 55 56 103 50 97 72 98 79 54 97 81 119 43 98 71 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 74 120 48 83 78 82 80 77 81 72 116 53 117 97 50 117 99 54 57 121 106 71 117 74 73 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 82 67 50 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 114 117 67 54 71 119 90 113 51 121 51 86 72 52 49 86 108 112 72 85 79 67 48 78 111 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 49 47 56 115 53 99 109 108 112 104 77 109 56 82 56 114 85 87 51 102 75 70 55 85 83 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 75 101 121 77 97 116 101 114 105 97 108 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 82 43 90 72 109 87 49 112 84 69 86 85 82 119 98 75 57 122 83 116 113 69 89 84 113 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 75 97 53 75 47 110 102 118 105 121 69 120 89 84 114 119 116 117 78 70 69 115 77 106 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 79 65 79 85 68 85 106 110 104 114 89 105 122 111 114 88 54 56 116 52 108 103 80 116 50 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 84 89 83 52 82 103 78 53 116 101 73 84 102 76 100 72 48 105 111 110 86 66 86 118 47 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 77 87 48 105 47 109 107 104 50 52 89 74 52 49 69 72 102 56 121 54 113 122 81 122 66 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 87 89 105 102 111 98 97 68 122 49 53 81 76 54 80 57 65 76 70 97 103 87 88 106 88 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 83 86 103 118 80 79 122 117 55 71 53 86 56 86 113 57 56 116 66 107 69 52 100 82 90 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 114 85 51 90 49 43 101 99 75 111 89 119 120 82 73 76 80 71 113 120 67 56 87 50 122 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 75 68 70 50 72 109 97 99 83 72 65 49 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 99 112 115 112 90 51 111 65 54 114 118 76 54 118 109 86 83 106 85 108 74 81 108 43 120 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 113 105 51 47 122 77 102 108 112 120 97 76 48 67 76 65 78 98 79 53 104 73 70 66 104 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 43 87 102 103 84 78 108 107 89 74 110 43 111 71 118 52 108 76 47 70 101 54 106 90 107 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 36 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 13 10 32 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 77 66 68 84 106 67 57 70 87 73 98 68 90 119 100 47 76 101 99 118 83 106 48 57 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 84 81 114 82 104 106 114 75 99 43 87 68 84 82 57 82 74 74 107 78 104 90 47 81 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 80 97 105 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 80 50 81 79 85 106 88 122 120 89 89 106 72 50 115 80 77 122 79 69 116 68 122 106 118 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 49 76 54 99 50 88 115 118 69 56 85 85 77 86 47 106 103 79 81 84 82 74 117 73 90 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 121 53 75 50 106 98 89 107 114 74 47 101 72 69 101 55 80 90 99 76 116 87 82 81 114 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 83 114 53 51 104 110 78 117 54 122 73 115 56 68 107 89 117 98 48 108 90 122 83 73 57 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 114 83 121 67 75 87 89 76 54 74 114 97 66 108 80 97 69 84 53 83 53 48 72 113 56 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 82 67 70 79 85 82 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 84 71 70 48 88 111 48 71 71 103 97 99 111 69 110 56 113 116 85 118 47 98 68 87 79 65 61 13 10 13 10]
1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
90
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1294288542
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
91
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
91
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
90
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1294288542
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
89
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1294288542
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
88
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1294288542
1
arg0[..]

1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
92
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
64618622
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
93
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
64618622
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
94
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
94
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
93
this
1506040926
1
this.sigSpi
1967250216
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1787579740
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
64618622
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
92
this
1506040926
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
313874500
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
64618622
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
95
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
96
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
96
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
97
arg0
249036123
1
arg1
1400121778
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
98
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
99

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
99
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
98
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
97
this
1868402667
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1400121778
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
1400121778
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
95
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
1868402667
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
100
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
101
this
1868402667
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1400121778
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
102
this
1868402667
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1400121778
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
103
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
103
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
104
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
105

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
105
this
405003338
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
104
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
405003338
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
106
this
1868402667
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1400121778
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
405003338
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
106
this
1868402667
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1400121778
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
405003338
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
102
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
101
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
100
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
107
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1515424423
1
arg0[..]
[48 -126 3 126 -96 3 2 1 2 2 1 16 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 30 23 13 48 49 48 52 50 53 48 55 48 48 48 48 90 23 13 50 48 48 52 50 53 48 55 48 48 48 48 90 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 -126 1 -73 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -21 -81 55 4 30 -54 81 30 105 93 -80 -14 -113 -10 -75 73 31 -58 -92 -103 5 -41 41 -65 116 -73 106 -11 25 -40 30 -28 27 -8 10 1 -102 -104 -1 112 -85 -30 74 86 -122 108 83 -77 -4 -31 -56 -127 -116 49 -16 -60 -13 -80 -117 -26 112 6 -20 -9 105 104 -37 -125 76 114 41 -119 41 54 23 92 59 74 7 -96 32 2 42 70 -105 81 29 112 -56 8 24 11 -50 12 110 -101 118 -9 5 -29 -25 -5 -45 97 121 -31 96 -102 36 -115 6 -107 -125 60 81 32 -31 48 -49 56 87 -126 -90 26 114 13 -50 -45 2 21 0 -124 37 69 -31 -70 -71 -87 98 -85 121 -24 91 48 -72 -119 107 27 -1 123 117 2 -127 -127 0 -85 -55 116 123 116 -17 -18 66 -75 106 83 77 59 -35 -112 6 114 104 -111 15 11 -92 41 118 46 85 59 -43 -82 77 101 92 126 42 58 4 -90 103 -90 -48 113 -86 -91 -41 -73 -30 -63 114 13 -92 -47 -86 30 -110 84 76 32 0 9 -94 -80 9 65 25 51 0 -78 -61 92 -82 66 -8 -79 -117 -54 124 -106 -40 16 127 55 68 91 -86 -52 120 -56 -41 114 118 55 107 64 -103 -88 85 102 -6 -88 3 30 -117 74 17 2 105 -53 76 -72 37 6 28 -96 119 -46 -55 -84 -46 61 -23 10 16 -6 118 112 -73 -5 -36 3 -127 -124 0 2 -127 -128 45 9 -104 92 -84 -72 -100 -57 -103 126 -18 32 25 42 52 -112 -7 -41 -85 -85 -82 -35 107 114 -107 13 102 -8 -17 39 -113 68 -78 -19 40 68 -57 -2 -81 -80 -90 39 111 0 103 69 -126 91 7 -88 86 86 59 -46 41 81 97 94 105 57 -41 46 116 119 18 -49 25 74 -11 45 -56 -53 114 97 -60 78 111 -6 71 67 63 20 -69 -6 -68 24 102 40 -62 -39 102 -117 122 45 47 -62 96 -110 75 20 -2 88 62 33 127 104 98 -66 108 72 73 -7 -96 75 94 -123 -99 25 16 -7 21 69 81 27 113 -44 -9 11 -93 102 48 100 48 17 6 9 96 -122 72 1 -122 -8 66 1 1 4 4 3 2 0 7 48 15 6 3 85 29 19 1 1 -1 4 5 48 3 1 1 -1 48 31 6 3 85 29 35 4 24 48 22 -128 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90 48 29 6 3 85 29 14 4 22 4 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90]
1
arg1
0
1
arg2
898
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
108
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1515424423
1
arg0[..]
[48 -126 3 126 -96 3 2 1 2 2 1 16 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 30 23 13 48 49 48 52 50 53 48 55 48 48 48 48 90 23 13 50 48 48 52 50 53 48 55 48 48 48 48 90 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 -126 1 -73 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -21 -81 55 4 30 -54 81 30 105 93 -80 -14 -113 -10 -75 73 31 -58 -92 -103 5 -41 41 -65 116 -73 106 -11 25 -40 30 -28 27 -8 10 1 -102 -104 -1 112 -85 -30 74 86 -122 108 83 -77 -4 -31 -56 -127 -116 49 -16 -60 -13 -80 -117 -26 112 6 -20 -9 105 104 -37 -125 76 114 41 -119 41 54 23 92 59 74 7 -96 32 2 42 70 -105 81 29 112 -56 8 24 11 -50 12 110 -101 118 -9 5 -29 -25 -5 -45 97 121 -31 96 -102 36 -115 6 -107 -125 60 81 32 -31 48 -49 56 87 -126 -90 26 114 13 -50 -45 2 21 0 -124 37 69 -31 -70 -71 -87 98 -85 121 -24 91 48 -72 -119 107 27 -1 123 117 2 -127 -127 0 -85 -55 116 123 116 -17 -18 66 -75 106 83 77 59 -35 -112 6 114 104 -111 15 11 -92 41 118 46 85 59 -43 -82 77 101 92 126 42 58 4 -90 103 -90 -48 113 -86 -91 -41 -73 -30 -63 114 13 -92 -47 -86 30 -110 84 76 32 0 9 -94 -80 9 65 25 51 0 -78 -61 92 -82 66 -8 -79 -117 -54 124 -106 -40 16 127 55 68 91 -86 -52 120 -56 -41 114 118 55 107 64 -103 -88 85 102 -6 -88 3 30 -117 74 17 2 105 -53 76 -72 37 6 28 -96 119 -46 -55 -84 -46 61 -23 10 16 -6 118 112 -73 -5 -36 3 -127 -124 0 2 -127 -128 45 9 -104 92 -84 -72 -100 -57 -103 126 -18 32 25 42 52 -112 -7 -41 -85 -85 -82 -35 107 114 -107 13 102 -8 -17 39 -113 68 -78 -19 40 68 -57 -2 -81 -80 -90 39 111 0 103 69 -126 91 7 -88 86 86 59 -46 41 81 97 94 105 57 -41 46 116 119 18 -49 25 74 -11 45 -56 -53 114 97 -60 78 111 -6 71 67 63 20 -69 -6 -68 24 102 40 -62 -39 102 -117 122 45 47 -62 96 -110 75 20 -2 88 62 33 127 104 98 -66 108 72 73 -7 -96 75 94 -123 -99 25 16 -7 21 69 81 27 113 -44 -9 11 -93 102 48 100 48 17 6 9 96 -122 72 1 -122 -8 66 1 1 4 4 3 2 0 7 48 15 6 3 85 29 19 1 1 -1 4 5 48 3 1 1 -1 48 31 6 3 85 29 35 4 24 48 22 -128 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90 48 29 6 3 85 29 14 4 22 4 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90]
1
arg1
0
1
arg2
898
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
109
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
109
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
108
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1515424423
1
arg0[..]
[48 -126 3 126 -96 3 2 1 2 2 1 16 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 30 23 13 48 49 48 52 50 53 48 55 48 48 48 48 90 23 13 50 48 48 52 50 53 48 55 48 48 48 48 90 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 -126 1 -73 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -21 -81 55 4 30 -54 81 30 105 93 -80 -14 -113 -10 -75 73 31 -58 -92 -103 5 -41 41 -65 116 -73 106 -11 25 -40 30 -28 27 -8 10 1 -102 -104 -1 112 -85 -30 74 86 -122 108 83 -77 -4 -31 -56 -127 -116 49 -16 -60 -13 -80 -117 -26 112 6 -20 -9 105 104 -37 -125 76 114 41 -119 41 54 23 92 59 74 7 -96 32 2 42 70 -105 81 29 112 -56 8 24 11 -50 12 110 -101 118 -9 5 -29 -25 -5 -45 97 121 -31 96 -102 36 -115 6 -107 -125 60 81 32 -31 48 -49 56 87 -126 -90 26 114 13 -50 -45 2 21 0 -124 37 69 -31 -70 -71 -87 98 -85 121 -24 91 48 -72 -119 107 27 -1 123 117 2 -127 -127 0 -85 -55 116 123 116 -17 -18 66 -75 106 83 77 59 -35 -112 6 114 104 -111 15 11 -92 41 118 46 85 59 -43 -82 77 101 92 126 42 58 4 -90 103 -90 -48 113 -86 -91 -41 -73 -30 -63 114 13 -92 -47 -86 30 -110 84 76 32 0 9 -94 -80 9 65 25 51 0 -78 -61 92 -82 66 -8 -79 -117 -54 124 -106 -40 16 127 55 68 91 -86 -52 120 -56 -41 114 118 55 107 64 -103 -88 85 102 -6 -88 3 30 -117 74 17 2 105 -53 76 -72 37 6 28 -96 119 -46 -55 -84 -46 61 -23 10 16 -6 118 112 -73 -5 -36 3 -127 -124 0 2 -127 -128 45 9 -104 92 -84 -72 -100 -57 -103 126 -18 32 25 42 52 -112 -7 -41 -85 -85 -82 -35 107 114 -107 13 102 -8 -17 39 -113 68 -78 -19 40 68 -57 -2 -81 -80 -90 39 111 0 103 69 -126 91 7 -88 86 86 59 -46 41 81 97 94 105 57 -41 46 116 119 18 -49 25 74 -11 45 -56 -53 114 97 -60 78 111 -6 71 67 63 20 -69 -6 -68 24 102 40 -62 -39 102 -117 122 45 47 -62 96 -110 75 20 -2 88 62 33 127 104 98 -66 108 72 73 -7 -96 75 94 -123 -99 25 16 -7 21 69 81 27 113 -44 -9 11 -93 102 48 100 48 17 6 9 96 -122 72 1 -122 -8 66 1 1 4 4 3 2 0 7 48 15 6 3 85 29 19 1 1 -1 4 5 48 3 1 1 -1 48 31 6 3 85 29 35 4 24 48 22 -128 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90 48 29 6 3 85 29 14 4 22 4 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90]
1
arg1
0
1
arg2
898
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
107
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1515424423
1
arg0[..]
[48 -126 3 126 -96 3 2 1 2 2 1 16 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 30 23 13 48 49 48 52 50 53 48 55 48 48 48 48 90 23 13 50 48 48 52 50 53 48 55 48 48 48 48 90 48 -127 -112 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 80 97 108 111 32 65 108 116 111 49 29 48 27 6 3 85 4 10 19 20 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 49 35 48 33 6 3 85 4 11 19 26 74 97 118 97 32 83 111 102 116 119 97 114 101 32 67 111 100 101 32 83 105 103 110 105 110 103 49 28 48 26 6 3 85 4 3 19 19 74 67 69 32 67 111 100 101 32 83 105 103 110 105 110 103 32 67 65 48 -126 1 -73 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -21 -81 55 4 30 -54 81 30 105 93 -80 -14 -113 -10 -75 73 31 -58 -92 -103 5 -41 41 -65 116 -73 106 -11 25 -40 30 -28 27 -8 10 1 -102 -104 -1 112 -85 -30 74 86 -122 108 83 -77 -4 -31 -56 -127 -116 49 -16 -60 -13 -80 -117 -26 112 6 -20 -9 105 104 -37 -125 76 114 41 -119 41 54 23 92 59 74 7 -96 32 2 42 70 -105 81 29 112 -56 8 24 11 -50 12 110 -101 118 -9 5 -29 -25 -5 -45 97 121 -31 96 -102 36 -115 6 -107 -125 60 81 32 -31 48 -49 56 87 -126 -90 26 114 13 -50 -45 2 21 0 -124 37 69 -31 -70 -71 -87 98 -85 121 -24 91 48 -72 -119 107 27 -1 123 117 2 -127 -127 0 -85 -55 116 123 116 -17 -18 66 -75 106 83 77 59 -35 -112 6 114 104 -111 15 11 -92 41 118 46 85 59 -43 -82 77 101 92 126 42 58 4 -90 103 -90 -48 113 -86 -91 -41 -73 -30 -63 114 13 -92 -47 -86 30 -110 84 76 32 0 9 -94 -80 9 65 25 51 0 -78 -61 92 -82 66 -8 -79 -117 -54 124 -106 -40 16 127 55 68 91 -86 -52 120 -56 -41 114 118 55 107 64 -103 -88 85 102 -6 -88 3 30 -117 74 17 2 105 -53 76 -72 37 6 28 -96 119 -46 -55 -84 -46 61 -23 10 16 -6 118 112 -73 -5 -36 3 -127 -124 0 2 -127 -128 45 9 -104 92 -84 -72 -100 -57 -103 126 -18 32 25 42 52 -112 -7 -41 -85 -85 -82 -35 107 114 -107 13 102 -8 -17 39 -113 68 -78 -19 40 68 -57 -2 -81 -80 -90 39 111 0 103 69 -126 91 7 -88 86 86 59 -46 41 81 97 94 105 57 -41 46 116 119 18 -49 25 74 -11 45 -56 -53 114 97 -60 78 111 -6 71 67 63 20 -69 -6 -68 24 102 40 -62 -39 102 -117 122 45 47 -62 96 -110 75 20 -2 88 62 33 127 104 98 -66 108 72 73 -7 -96 75 94 -123 -99 25 16 -7 21 69 81 27 113 -44 -9 11 -93 102 48 100 48 17 6 9 96 -122 72 1 -122 -8 66 1 1 4 4 3 2 0 7 48 15 6 3 85 29 19 1 1 -1 4 5 48 3 1 1 -1 48 31 6 3 85 29 35 4 24 48 22 -128 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90 48 29 6 3 85 29 14 4 22 4 20 101 -30 -12 -122 -55 -45 78 -16 -111 78 88 -94 106 -11 -40 120 90 -102 -63 -90]
1
arg1
0
1
arg2
898
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
110
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
582223941
1
arg0[..]
[48 44 2 20 42 -9 -49 60 -105 93 -7 120 -74 8 -41 65 -76 -39 13 69 76 -28 -76 -100 2 20 69 -51 117 105 14 33 -6 29 -42 -77 41 -78 -23 -9 51 29 51 -3 -4 73]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
111
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
582223941
1
arg0[..]
[48 44 2 20 42 -9 -49 60 -105 93 -7 120 -74 8 -41 65 -76 -39 13 69 76 -28 -76 -100 2 20 69 -51 117 105 14 33 -6 29 -42 -77 41 -78 -23 -9 51 29 51 -3 -4 73]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
112
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
112
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
111
this
1868402667
1
this.sigSpi
405003338
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1737737835
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
582223941
1
arg0[..]
[48 44 2 20 42 -9 -49 60 -105 93 -7 120 -74 8 -41 65 -76 -39 13 69 76 -28 -76 -100 2 20 69 -51 117 105 14 33 -6 29 -42 -77 41 -78 -23 -9 51 29 51 -3 -4 73]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
110
this
1868402667
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
582223941
1
arg0[..]
[48 44 2 20 42 -9 -49 60 -105 93 -7 120 -74 8 -41 65 -76 -39 13 69 76 -28 -76 -100 2 20 69 -51 117 105 14 33 -6 29 -42 -77 41 -78 -23 -9 51 29 51 -3 -4 73]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
113
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
114
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
114
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
115
arg0
249036123
1
arg1
1502280655
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
116
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
117

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
117
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
116
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
115
this
865730806
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1502280655
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
1502280655
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
113
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
865730806
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
118
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
119
this
865730806
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1502280655
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
120
this
865730806
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1502280655
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
121
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
121
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
122
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
123

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
123
this
748699889
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
122
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
748699889
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
124
this
865730806
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1502280655
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
748699889
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
124
this
865730806
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1502280655
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
748699889
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
120
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
119
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
118
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
125
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1292346650
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
126
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1292346650
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
127
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
127
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
126
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1292346650
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
125
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1292346650
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
128
this
865730806
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
129
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
130
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
130
this
865730806
1
this.sigSpi
748699889
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1135948017
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
131
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
131
this
1848815568
1
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
132
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1834025672
1
arg0.toString
"MD5withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
133
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
133
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
134
arg0
1636683913
1
arg1
628491368
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1834025672
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
135
arg0
1834025672
1
arg0.toString
"MD5withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
136

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
136
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
135
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1834025672
1
arg0.toString
"MD5withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
134
this
1729846030
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
628491368
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
arg1
628491368
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1834025672
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
132
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1834025672
1
arg0.toString
"MD5withRSA"
1
return
1729846030
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1834025672
1
return.algorithm.toString
"MD5withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
137
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1319493830
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
138
this
1729846030
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
628491368
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1319493830
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
139
this
1729846030
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
628491368
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1319493830
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
140
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
140
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
141
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
142

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
142
this
1270241846
1
this.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
141
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
return
1270241846
1
return.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
143
this
1729846030
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
628491368
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1270241846
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1319493830
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
143
this
1729846030
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
628491368
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1270241846
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
1319493830
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
139
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
1319493830
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
138
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1319493830
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
137
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1319493830
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
144
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
819770895
1
arg0[..]
[48 -126 1 -118 2 1 2 48 13 6 9 42 -122 72 -122 -9 13 1 1 4 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 48 50 49 48 51 49 49 53 50 55 52 52 90 23 13 48 55 49 48 51 49 49 53 50 55 52 52 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 92 48 13 6 9 42 -122 72 -122 -9 13 1 1 1 5 0 3 75 0 48 72 2 65 0 -81 83 -110 93 -93 -77 -90 117 104 -88 -67 -117 -87 46 126 28 -68 -75 -111 91 -63 -62 35 63 19 -104 -104 79 -41 -103 106 8 68 -14 -85 -59 -5 -121 -60 78 42 86 80 -44 -42 9 12 -57 71 -121 3 36 98 78 -105 -45 102 -17 -69 68 46 17 18 -31 2 3 1 0 1]
1
arg1
0
1
arg2
398
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
145
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
819770895
1
arg0[..]
[48 -126 1 -118 2 1 2 48 13 6 9 42 -122 72 -122 -9 13 1 1 4 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 48 50 49 48 51 49 49 53 50 55 52 52 90 23 13 48 55 49 48 51 49 49 53 50 55 52 52 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 92 48 13 6 9 42 -122 72 -122 -9 13 1 1 1 5 0 3 75 0 48 72 2 65 0 -81 83 -110 93 -93 -77 -90 117 104 -88 -67 -117 -87 46 126 28 -68 -75 -111 91 -63 -62 35 63 19 -104 -104 79 -41 -103 106 8 68 -14 -85 -59 -5 -121 -60 78 42 86 80 -44 -42 9 12 -57 71 -121 3 36 98 78 -105 -45 102 -17 -69 68 46 17 18 -31 2 3 1 0 1]
1
arg1
0
1
arg2
398
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
146
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
146
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
145
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
819770895
1
arg0[..]
[48 -126 1 -118 2 1 2 48 13 6 9 42 -122 72 -122 -9 13 1 1 4 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 48 50 49 48 51 49 49 53 50 55 52 52 90 23 13 48 55 49 48 51 49 49 53 50 55 52 52 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 92 48 13 6 9 42 -122 72 -122 -9 13 1 1 1 5 0 3 75 0 48 72 2 65 0 -81 83 -110 93 -93 -77 -90 117 104 -88 -67 -117 -87 46 126 28 -68 -75 -111 91 -63 -62 35 63 19 -104 -104 79 -41 -103 106 8 68 -14 -85 -59 -5 -121 -60 78 42 86 80 -44 -42 9 12 -57 71 -121 3 36 98 78 -105 -45 102 -17 -69 68 46 17 18 -31 2 3 1 0 1]
1
arg1
0
1
arg2
398
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
144
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
819770895
1
arg0[..]
[48 -126 1 -118 2 1 2 48 13 6 9 42 -122 72 -122 -9 13 1 1 4 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 48 50 49 48 51 49 49 53 50 55 52 52 90 23 13 48 55 49 48 51 49 49 53 50 55 52 52 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 92 48 13 6 9 42 -122 72 -122 -9 13 1 1 1 5 0 3 75 0 48 72 2 65 0 -81 83 -110 93 -93 -77 -90 117 104 -88 -67 -117 -87 46 126 28 -68 -75 -111 91 -63 -62 35 63 19 -104 -104 79 -41 -103 106 8 68 -14 -85 -59 -5 -121 -60 78 42 86 80 -44 -42 9 12 -57 71 -121 3 36 98 78 -105 -45 102 -17 -69 68 46 17 18 -31 2 3 1 0 1]
1
arg1
0
1
arg2
398
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
147
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1781836760
1
arg0[..]
[47 -27 -100 84 92 -93 -6 37 -27 17 83 85 65 -77 78 57 73 86 -102 89 -105 26 35 74 41 121 -56 116 -41 28 -43 -107 50 -117 -30 86 -45 57 -91 125 -98 -30 83 -9 -111 98 17 4 36 28 29 -83 74 50 -120 99 -122 46 -114 -23 -117 -94 115 0]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
148
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1781836760
1
arg0[..]
[47 -27 -100 84 92 -93 -6 37 -27 17 83 85 65 -77 78 57 73 86 -102 89 -105 26 35 74 41 121 -56 116 -41 28 -43 -107 50 -117 -30 86 -45 57 -91 125 -98 -30 83 -9 -111 98 17 4 36 28 29 -83 74 50 -120 99 -122 46 -114 -23 -117 -94 115 0]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
149
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
149
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
148
this
1729846030
1
this.sigSpi
1270241846
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
888613124
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1781836760
1
arg0[..]
[47 -27 -100 84 92 -93 -6 37 -27 17 83 85 65 -77 78 57 73 86 -102 89 -105 26 35 74 41 121 -56 116 -41 28 -43 -107 50 -117 -30 86 -45 57 -91 125 -98 -30 83 -9 -111 98 17 4 36 28 29 -83 74 50 -120 99 -122 46 -114 -23 -117 -94 115 0]
1
return
false
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
147
this
1729846030
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1834025672
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1781836760
1
arg0[..]
[47 -27 -100 84 92 -93 -6 37 -27 17 83 85 65 -77 78 57 73 86 -102 89 -105 26 35 74 41 121 -56 116 -41 28 -43 -107 50 -117 -30 86 -45 57 -91 125 -98 -30 83 -9 -111 98 17 4 36 28 29 -83 74 50 -120 99 -122 46 -114 -23 -117 -94 115 0]
1
return
false
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
150
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
150
this
520948938
1
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
151
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
152
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
152
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
153
arg0
249036123
1
arg1
297972147
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
154
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
155

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
155
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
154
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
153
this
86009825
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
297972147
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
297972147
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
151
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
86009825
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
156
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
157
this
86009825
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
297972147
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
158
this
86009825
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
297972147
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
159
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
159
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
160
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
161

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
161
this
298673751
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
160
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
298673751
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
162
this
86009825
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
297972147
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
298673751
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
162
this
86009825
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
297972147
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
298673751
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
158
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
157
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
156
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
163
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1140450018
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
164
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1140450018
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
165
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
165
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
164
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1140450018
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
163
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1140450018
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
166
this
86009825
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
167
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
168
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
168
this
86009825
1
this.sigSpi
298673751
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
310634344
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
169
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
169
this
446247347
1
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
170
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
170
this
1066265705
1
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
171
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
172
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
172
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
173
arg0
249036123
1
arg1
2124153367
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
174
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
175

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
175
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
174
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
173
this
877491441
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2124153367
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
2124153367
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
171
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
877491441
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
176
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
177
this
877491441
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2124153367
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
178
this
877491441
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2124153367
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
179
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
179
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
180
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
181

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
181
this
566290708
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
180
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
566290708
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
182
this
877491441
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2124153367
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
566290708
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
182
this
877491441
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2124153367
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
566290708
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
178
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
177
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
176
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
183
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
405852
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
184
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
405852
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
185
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
185
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
184
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
405852
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
183
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
405852
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
186
this
877491441
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
187
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
188
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
188
this
877491441
1
this.sigSpi
566290708
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1228444938
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
189
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
189
this
378703623
1
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
190
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
190
this
1877745700
1
arg0
670967905
1
arg0.toString
"Signature does not match."
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
191
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
192
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
192
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
193
arg0
249036123
1
arg1
1999787235
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
194
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
195

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
195
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
194
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
193
this
157499448
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1999787235
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
1999787235
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
191
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
157499448
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
196
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
197
this
157499448
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1999787235
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
198
this
157499448
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
1999787235
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
199
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
199
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
200
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
201

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
201
this
50873089
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
200
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
50873089
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
202
this
157499448
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1999787235
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
50873089
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
202
this
157499448
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1999787235
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
50873089
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
198
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
197
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
196
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
203
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
325515317
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
204
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
325515317
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
205
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
205
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
204
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
325515317
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
203
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
325515317
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
206
this
157499448
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
207
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
208
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
208
this
157499448
1
this.sigSpi
50873089
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
1393369432
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
209
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
209
this
1295083910
1
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
210
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
211
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
211
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
212
arg0
249036123
1
arg1
2107118206
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
213
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
214

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
214
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
213
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
212
this
182865565
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2107118206
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
arg1
2107118206
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1066350399
1
arg2.toString
"SHA1withDSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
210
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1066350399
1
arg0.toString
"SHA1withDSA"
1
return
182865565
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1066350399
1
return.algorithm.toString
"SHA1withDSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
215
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
216
this
182865565
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2107118206
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
217
this
182865565
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
249036123
1
this.serviceIterator
2107118206
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
218
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
218
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
249036123
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
219
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
220

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
220
this
2035063728
1
this.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
219
java.security.Signature$Delegate.warnCount
10
1
arg0
249036123
1
return
2035063728
1
return.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
221
this
182865565
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2107118206
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
2035063728
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
221
this
182865565
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2107118206
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
2035063728
1
arg0.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
382193645
1
arg2.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
217
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
382193645
1
arg1.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
216
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
215
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
382193645
1
arg0.getClass()
"sun.security.provider.DSAPublicKeyImpl"
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
222
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1100066271
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
223
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1100066271
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
224
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
224
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
223
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1100066271
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
222
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1100066271
1
arg0[..]
[48 -126 2 -23 2 4 55 -7 57 -27 48 11 6 7 42 -122 72 -50 56 4 3 5 0 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 30 23 13 57 57 49 48 48 52 50 51 51 54 48 53 90 23 13 48 48 49 48 48 51 50 51 51 54 48 53 90 48 123 49 11 48 9 6 3 85 4 6 19 2 85 83 49 11 48 9 6 3 85 4 8 19 2 67 65 49 18 48 16 6 3 85 4 7 19 9 67 117 112 101 114 116 105 110 111 49 25 48 23 6 3 85 4 10 19 16 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 49 22 48 20 6 3 85 4 11 19 13 74 97 118 97 32 83 111 102 116 119 97 114 101 49 24 48 22 6 3 85 4 3 19 15 74 67 69 32 68 101 118 101 108 111 112 109 101 110 116 48 -126 1 -72 48 -126 1 44 6 7 42 -122 72 -50 56 4 1 48 -126 1 31 2 -127 -127 0 -3 127 83 -127 29 117 18 41 82 -33 74 -100 46 -20 -28 -25 -10 17 -73 82 60 -17 68 0 -61 30 63 -128 -74 81 38 105 69 93 64 34 81 -5 89 61 -115 88 -6 -65 -59 -11 -70 48 -10 -53 -101 85 108 -41 -127 59 -128 29 52 111 -14 102 96 -73 107 -103 80 -91 -92 -97 -97 -24 4 123 16 34 -62 79 -69 -87 -41 -2 -73 -58 27 -8 59 87 -25 -58 -88 -90 21 15 4 -5 -125 -10 -45 -59 30 -61 2 53 84 19 90 22 -111 50 -10 117 -13 -82 43 97 -41 42 -17 -14 34 3 25 -99 -47 72 1 -57 2 21 0 -105 96 80 -113 21 35 11 -52 -78 -110 -71 -126 -94 -21 -124 11 -16 88 28 -11 2 -127 -127 0 -9 -31 -96 -123 -42 -101 61 -34 -53 -68 -85 92 54 -72 87 -71 121 -108 -81 -69 -6 58 -22 -126 -7 87 76 11 61 7 -126 103 81 89 87 -114 -70 -44 89 79 -26 113 7 16 -127 -128 -76 73 22 113 35 -24 76 40 22 19 -73 -49 9 50 -116 -56 -90 -31 60 22 122 -117 84 124 -115 40 -32 -93 -82 30 43 -77 -90 117 -111 110 -93 127 11 -6 33 53 98 -15 -5 98 122 1 36 59 -52 -92 -15 -66 -88 81 -112 -119 -88 -125 -33 -31 90 -27 -97 6 -110 -117 102 94 -128 123 85 37 100 1 76 59 -2 -49 73 42 3 -127 -123 0 2 -127 -127 0 -31 -84 71 -52 26 71 -106 -94 -72 -23 53 -56 18 -34 -103 25 85 9 -113 -128 60 -101 -9 -58 -87 -113 71 21 -128 23 -87 -16 87 108 107 21 64 124 -126 20 -124 48 87 7 -53 10 30 -30 -16 67 -66 65 -110 -96 1 115 120 30 99 -53 -100 35 14 33 108 55 -112 5 60 69 81 126 -9 -110 -32 -45 89 -43 -40 17 116 118 -37 -121 120 121 59 87 89 19 -125 0 41 12 16 125 74 33 -12 -26 -73 105 -88 101 7 -22 43 71 50 -114 28 -71 70 14 -106 -51 69 2 -46 79 -112 66 -106 -6 33 -83 -87 -126]
1
arg1
0
1
arg2
749
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
225
this
182865565
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1066350399
1
this.algorithm.toString
"SHA1withDSA"
1
this.provider
893902972
1
this.provider.getClass()
"sun.security.provider.Sun"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
226
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
820540792
1
arg0[..]
[48 45 2 20 69 -29 -92 -9 -99 47 -94 -100 -1 83 3 90 75 119 114 -56 87 67 77 13 2 21 0 -122 -97 -117 -19 127 -8 -110 -79 -69 74 -36 -95 117 -116 21 44 77 105 22 -9]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
227
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
227
this
182865565
1
this.sigSpi
2035063728
1
this.sigSpi.getClass()
"sun.security.provider.DSA$SHA1withDSA"
1
this.sigSpi.appRandom
null
1
this.lock
372452098
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.SignatureException.SignatureException(java.lang.String):::ENTER
this_invocation_nonce
228
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.SignatureException.SignatureException(java.lang.String):::EXIT39
this_invocation_nonce
228
this
1127099674
1
arg0
1836593757
1
arg0.toString
"invalid signature: out of range values"
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
229
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1506253329
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
230
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
230
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
231
arg0
1068884468
1
arg1
1062469667
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1506253329
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
232
arg0
1506253329
1
arg0.toString
"SHA1withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
233

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
233
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
232
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1506253329
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
231
this
601168464
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1062469667
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
arg1
1062469667
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1506253329
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
229
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1506253329
1
arg0.toString
"SHA1withRSA"
1
return
601168464
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1506253329
1
return.algorithm.toString
"SHA1withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
234
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
235
this
601168464
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1062469667
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
236
this
601168464
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1062469667
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
237
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
237
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
238
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
239

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
239
this
120226146
1
this.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
238
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
return
120226146
1
return.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
240
this
601168464
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1062469667
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
120226146
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
240
this
601168464
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1062469667
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
120226146
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
236
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
235
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
234
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
241
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2006207642
1
arg0[..]

1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
242
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2006207642
1
arg0[..]

1
arg1
0
1
arg2
6305
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
243
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
2006207642
1
arg0[..]

1
arg1
0
1
arg2
6305
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
244
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
244
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
243
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
2006207642
1
arg0[..]

1
arg1
0
1
arg2
6305
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
242
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2006207642
1
arg0[..]

1
arg1
0
1
arg2
6305
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
241
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2006207642
1
arg0[..]

1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
245
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1684909453
1
arg0[..]
[53 -128 -37 15 46 106 -95 -57 62 -121 91 -92 29 35 -98 -7 12 61 -81 -65 -96 -93 -3 -123 16 113 33 57 -58 -92 15 109 -121 -125 -123 39 89 -72 16 119 -66 40 -128 -55 13 16 -48 97 78 -19 -35 95 59 -8 58 -128 -58 36 -23 85 -47 -22 26 -114 -115 59 59 -24 39 119 -40 113 -32 107 48 -6 -15 6 -92 14 -19 -50 75 104 -104 72 -89 59 -74 76 86 -53 -8 12 93 11 -75 52 87 102 -37 68 -49 -18 44 52 44 121 -26 115 -101 -90 -17 9 -49 78 86 -11 61 -57 -8 101 -45 -36 111 103 122 -89]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
246
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1684909453
1
arg0[..]
[53 -128 -37 15 46 106 -95 -57 62 -121 91 -92 29 35 -98 -7 12 61 -81 -65 -96 -93 -3 -123 16 113 33 57 -58 -92 15 109 -121 -125 -123 39 89 -72 16 119 -66 40 -128 -55 13 16 -48 97 78 -19 -35 95 59 -8 58 -128 -58 36 -23 85 -47 -22 26 -114 -115 59 59 -24 39 119 -40 113 -32 107 48 -6 -15 6 -92 14 -19 -50 75 104 -104 72 -89 59 -74 76 86 -53 -8 12 93 11 -75 52 87 102 -37 68 -49 -18 44 52 44 121 -26 115 -101 -90 -17 9 -49 78 86 -11 61 -57 -8 101 -45 -36 111 103 122 -89]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
247
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
247
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
246
this
601168464
1
this.sigSpi
120226146
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
2075298960
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1684909453
1
arg0[..]
[53 -128 -37 15 46 106 -95 -57 62 -121 91 -92 29 35 -98 -7 12 61 -81 -65 -96 -93 -3 -123 16 113 33 57 -58 -92 15 109 -121 -125 -123 39 89 -72 16 119 -66 40 -128 -55 13 16 -48 97 78 -19 -35 95 59 -8 58 -128 -58 36 -23 85 -47 -22 26 -114 -115 59 59 -24 39 119 -40 113 -32 107 48 -6 -15 6 -92 14 -19 -50 75 104 -104 72 -89 59 -74 76 86 -53 -8 12 93 11 -75 52 87 102 -37 68 -49 -18 44 52 44 121 -26 115 -101 -90 -17 9 -49 78 86 -11 61 -57 -8 101 -45 -36 111 103 122 -89]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
245
this
601168464
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1506253329
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1684909453
1
arg0[..]
[53 -128 -37 15 46 106 -95 -57 62 -121 91 -92 29 35 -98 -7 12 61 -81 -65 -96 -93 -3 -123 16 113 33 57 -58 -92 15 109 -121 -125 -123 39 89 -72 16 119 -66 40 -128 -55 13 16 -48 97 78 -19 -35 95 59 -8 58 -128 -58 36 -23 85 -47 -22 26 -114 -115 59 59 -24 39 119 -40 113 -32 107 48 -6 -15 6 -92 14 -19 -50 75 104 -104 72 -89 59 -74 76 86 -53 -8 12 93 11 -75 52 87 102 -37 68 -49 -18 44 52 44 121 -26 115 -101 -90 -17 9 -49 78 86 -11 61 -57 -8 101 -45 -36 111 103 122 -89]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
248
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1057154981
1
arg0.toString
"MD5withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
249
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
249
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
250
arg0
1636683913
1
arg1
1471554036
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1057154981
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
251
arg0
1057154981
1
arg0.toString
"MD5withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
252

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
252
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
251
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1057154981
1
arg0.toString
"MD5withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
250
this
1987004200
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1471554036
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
arg1
1471554036
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
1057154981
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
248
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1057154981
1
arg0.toString
"MD5withRSA"
1
return
1987004200
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
1057154981
1
return.algorithm.toString
"MD5withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
253
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
254
this
1987004200
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1471554036
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
255
this
1987004200
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1471554036
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
256
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
256
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
257
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
258

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
258
this
1071984161
1
this.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
257
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
return
1071984161
1
return.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
259
this
1987004200
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1471554036
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1071984161
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
259
this
1987004200
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1471554036
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1071984161
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
255
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
254
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
253
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
260
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
261
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1
arg1
0
1
arg2
269
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
262
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1
arg1
0
1
arg2
269
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
263
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
263
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
262
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1
arg1
0
1
arg2
269
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
261
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1
arg1
0
1
arg2
269
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
260
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1597479244
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 55 75 74 115 106 103 109 102 78 70 71 54 102 121 82 78 74 84 111 122 97 82 106 77 70 80 85 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 71 75 80 83 97 84 69 99 117 101 99 53 90 50 48 122 88 103 72 90 73 108 110 67 76 107 65 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 85 83 95 101 120 112 111 114 116 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 102 105 67 89 113 99 54 111 79 90 99 103 89 108 116 109 81 53 105 119 53 121 53 108 87 111 61 13 10 13 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
264
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
993099114
1
arg0[..]
[118 65 58 -110 -127 51 -16 -112 -83 71 -111 87 -33 -57 -41 -85 15 -119 -102 126 -7 -8 19 44 -86 92 114 45 -57 -122 102 -36 -11 34 -51 -6 -43 80 63 -15 -83 -52 59 -57 -120 -74 97 29 94 -73 121 -24 117 -13 18 -82 89 104 -55 -128 99 44 -86 13 21 41 111 -88 51 -16 85 -5 -5 -120 -56 -88 68 61 -80 82 -53 10 85 -73 96 -30 -110 98 -12 46 -61 -72 -90 -77 -53 -7 -24 25 -78 52 -91 -101 -111 25 78 74 -76 84 4 12 66 -35 -59 -17 -25 94 0 90 109 7 117 24 -61 -60 -82 -10 -97 -64]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
265
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
993099114
1
arg0[..]
[118 65 58 -110 -127 51 -16 -112 -83 71 -111 87 -33 -57 -41 -85 15 -119 -102 126 -7 -8 19 44 -86 92 114 45 -57 -122 102 -36 -11 34 -51 -6 -43 80 63 -15 -83 -52 59 -57 -120 -74 97 29 94 -73 121 -24 117 -13 18 -82 89 104 -55 -128 99 44 -86 13 21 41 111 -88 51 -16 85 -5 -5 -120 -56 -88 68 61 -80 82 -53 10 85 -73 96 -30 -110 98 -12 46 -61 -72 -90 -77 -53 -7 -24 25 -78 52 -91 -101 -111 25 78 74 -76 84 4 12 66 -35 -59 -17 -25 94 0 90 109 7 117 24 -61 -60 -82 -10 -97 -64]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
266
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
266
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
265
this
1987004200
1
this.sigSpi
1071984161
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
61394903
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
993099114
1
arg0[..]
[118 65 58 -110 -127 51 -16 -112 -83 71 -111 87 -33 -57 -41 -85 15 -119 -102 126 -7 -8 19 44 -86 92 114 45 -57 -122 102 -36 -11 34 -51 -6 -43 80 63 -15 -83 -52 59 -57 -120 -74 97 29 94 -73 121 -24 117 -13 18 -82 89 104 -55 -128 99 44 -86 13 21 41 111 -88 51 -16 85 -5 -5 -120 -56 -88 68 61 -80 82 -53 10 85 -73 96 -30 -110 98 -12 46 -61 -72 -90 -77 -53 -7 -24 25 -78 52 -91 -101 -111 25 78 74 -76 84 4 12 66 -35 -59 -17 -25 94 0 90 109 7 117 24 -61 -60 -82 -10 -97 -64]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
264
this
1987004200
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
1057154981
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
993099114
1
arg0[..]
[118 65 58 -110 -127 51 -16 -112 -83 71 -111 87 -33 -57 -41 -85 15 -119 -102 126 -7 -8 19 44 -86 92 114 45 -57 -122 102 -36 -11 34 -51 -6 -43 80 63 -15 -83 -52 59 -57 -120 -74 97 29 94 -73 121 -24 117 -13 18 -82 89 104 -55 -128 99 44 -86 13 21 41 111 -88 51 -16 85 -5 -5 -120 -56 -88 68 61 -80 82 -53 10 85 -73 96 -30 -110 98 -12 46 -61 -72 -90 -77 -53 -7 -24 25 -78 52 -91 -101 -111 25 78 74 -76 84 4 12 66 -35 -59 -17 -25 94 0 90 109 7 117 24 -61 -60 -82 -10 -97 -64]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
267
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
266428320
1
arg0.toString
"MD5withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
268
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
268
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
269
arg0
1636683913
1
arg1
357370245
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
266428320
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
270
arg0
266428320
1
arg0.toString
"MD5withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
271

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
271
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
270
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
266428320
1
arg0.toString
"MD5withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
269
this
1957430703
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
357370245
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
arg1
357370245
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
266428320
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
267
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
266428320
1
arg0.toString
"MD5withRSA"
1
return
1957430703
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
266428320
1
return.algorithm.toString
"MD5withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
272
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
273
this
1957430703
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
357370245
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
274
this
1957430703
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
357370245
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
275
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
275
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
276
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
277

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
277
this
249415112
1
this.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
276
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
return
249415112
1
return.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
278
this
1957430703
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
357370245
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249415112
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
278
this
1957430703
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
357370245
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
249415112
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
274
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
273
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
272
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
279
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
280
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1
arg1
0
1
arg2
337
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
281
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1
arg1
0
1
arg2
337
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
282
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
282
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
281
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1
arg1
0
1
arg2
337
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
280
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1
arg1
0
1
arg2
337
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
279
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
31708440
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 45 114 99 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 78 102 66 65 115 118 51 102 120 119 47 122 84 117 101 52 120 47 76 90 109 47 55 117 102 82 119 61 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 105 102 101 76 102 66 79 65 69 99 104 43 102 110 49 88 70 86 121 99 90 56 105 74 109 70 48 61 13 10 13 10 78 97 109 101 58 32 101 120 101 109 112 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 66 69 99 75 75 73 89 98 65 115 90 49 113 75 90 56 90 70 111 108 104 87 75 108 110 89 61 13 10 13 10 78 97 109 101 58 32 100 101 102 97 117 108 116 95 108 111 99 97 108 46 112 111 108 105 99 121 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 57 97 113 111 86 111 77 65 111 112 51 99 67 68 66 114 111 49 70 84 112 52 121 70 110 77 61 13 10 13 10]
1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
283
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
347806624
1
arg0[..]
[82 -125 -44 30 -108 -78 14 -28 4 37 -27 0 -93 -72 -27 88 -27 -108 -92 93 -115 37 121 51 -101 34 -51 126 -97 103 91 -26 -105 -28 -128 1 67 126 65 -18 -77 109 87 66 -72 -46 -32 30 56 14 70 8 14 67 -69 40 -63 -83 -67 -13 -82 -76 6 115 83 -44 -57 -114 -83 98 121 -49 -75 65 11 -12 94 69 -96 -110 -9 -24 9 30 17 85 -30 12 10 -89 115 -93 -37 -54 96 99 69 -30 117 118 4 -72 121 -22 67 3 18 -25 -21 -60 -24 -92 124 -12 -105 23 29 -11 21 2 -87 -76 -8 39 -23 69 -91 -92]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
284
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
347806624
1
arg0[..]
[82 -125 -44 30 -108 -78 14 -28 4 37 -27 0 -93 -72 -27 88 -27 -108 -92 93 -115 37 121 51 -101 34 -51 126 -97 103 91 -26 -105 -28 -128 1 67 126 65 -18 -77 109 87 66 -72 -46 -32 30 56 14 70 8 14 67 -69 40 -63 -83 -67 -13 -82 -76 6 115 83 -44 -57 -114 -83 98 121 -49 -75 65 11 -12 94 69 -96 -110 -9 -24 9 30 17 85 -30 12 10 -89 115 -93 -37 -54 96 99 69 -30 117 118 4 -72 121 -22 67 3 18 -25 -21 -60 -24 -92 124 -12 -105 23 29 -11 21 2 -87 -76 -8 39 -23 69 -91 -92]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
285
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
285
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
284
this
1957430703
1
this.sigSpi
249415112
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
1235836928
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
347806624
1
arg0[..]
[82 -125 -44 30 -108 -78 14 -28 4 37 -27 0 -93 -72 -27 88 -27 -108 -92 93 -115 37 121 51 -101 34 -51 126 -97 103 91 -26 -105 -28 -128 1 67 126 65 -18 -77 109 87 66 -72 -46 -32 30 56 14 70 8 14 67 -69 40 -63 -83 -67 -13 -82 -76 6 115 83 -44 -57 -114 -83 98 121 -49 -75 65 11 -12 94 69 -96 -110 -9 -24 9 30 17 85 -30 12 10 -89 115 -93 -37 -54 96 99 69 -30 117 118 4 -72 121 -22 67 3 18 -25 -21 -60 -24 -92 124 -12 -105 23 29 -11 21 2 -87 -76 -8 39 -23 69 -91 -92]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
283
this
1957430703
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
266428320
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
347806624
1
arg0[..]
[82 -125 -44 30 -108 -78 14 -28 4 37 -27 0 -93 -72 -27 88 -27 -108 -92 93 -115 37 121 51 -101 34 -51 126 -97 103 91 -26 -105 -28 -128 1 67 126 65 -18 -77 109 87 66 -72 -46 -32 30 56 14 70 8 14 67 -69 40 -63 -83 -67 -13 -82 -76 6 115 83 -44 -57 -114 -83 98 121 -49 -75 65 11 -12 94 69 -96 -110 -9 -24 9 30 17 85 -30 12 10 -89 115 -93 -37 -54 96 99 69 -30 117 118 4 -72 121 -22 67 3 18 -25 -21 -60 -24 -92 124 -12 -105 23 29 -11 21 2 -87 -76 -8 39 -23 69 -91 -92]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
286
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
412543611
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
287
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
287
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
288
arg0
1068884468
1
arg1
1543257561
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
412543611
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
289
arg0
412543611
1
arg0.toString
"SHA1withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
290

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
290
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
289
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
412543611
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
288
this
222339261
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1543257561
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
arg1
1543257561
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
412543611
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
286
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
412543611
1
arg0.toString
"SHA1withRSA"
1
return
222339261
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
412543611
1
return.algorithm.toString
"SHA1withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
291
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
292
this
222339261
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1543257561
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
293
this
222339261
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
1543257561
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
294
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
294
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
295
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
296

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
296
this
1308517931
1
this.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
295
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
return
1308517931
1
return.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
297
this
222339261
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1543257561
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1308517931
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
297
this
222339261
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1543257561
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1308517931
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
293
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
292
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
291
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
298
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2028321037
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 74 119 53 115 75 120 55 111 115 86 48 120 122 100 79 115 117 67 87 87 51 67 114 122 87 122 107 61 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 73 115 116 105 75 52 55 55 112 103 51 47 83 101 122 65 65 99 75 81 70 116 116 75 54 54 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 116 74 73 52 98 98 54 73 74 114 83 103 54 78 111 121 88 69 78 49 54 57 74 89 83 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 106 53 99 75 55 80 71 74 75 107 79 104 82 87 68 48 113 56 68 52 122 113 83 79 88 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 80 75 67 83 49 50 80 66 69 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 71 100 84 117 83 79 101 88 109 114 118 83 66 54 110 97 102 51 56 86 90 108 112 107 110 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 43 113 118 50 77 71 100 66 112 120 108 118 102 109 101 111 70 80 109 68 71 99 65 97 101 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 67 110 76 104 120 65 99 108 99 51 43 75 49 66 83 86 116 88 119 84 77 75 122 56 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 97 101 79 121 57 70 107 119 77 84 82 105 111 82 76 57 114 49 115 57 114 88 87 75 84 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 55 97 72 69 104 67 77 82 88 65 70 57 112 118 80 56 102 102 89 49 119 114 80 97 78 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 106 81 43 54 48 86 53 66 113 122 113 51 106 117 90 107 57 114 97 57 122 110 120 54 121 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 101 114 103 52 55 116 69 87 73 106 121 110 74 50 122 99 83 73 83 112 103 75 47 85 112 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 118 67 102 82 120 97 50 107 90 84 86 104 71 119 56 67 112 78 70 57 111 106 85 112 47 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 120 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 111 77 115 84 108 81 43 120 109 77 117 79 121 49 99 89 54 114 111 90 97 74 68 85 112 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 79 53 111 88 78 80 106 72 99 76 87 102 53 86 110 71 78 47 120 104 53 47 109 74 43 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 112 47 107 107 89 99 49 53 106 109 113 79 113 52 70 52 70 100 81 50 81 105 77 99 107 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 51 84 108 72 75 102 55 85 47 84 89 117 70 103 86 83 86 56 66 84 68 99 121 85 76 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 108 43 84 56 117 106 80 74 72 68 57 98 111 67 69 50 86 87 83 71 104 116 72 111 76 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 72 103 55 90 107 56 115 120 78 56 66 105 71 67 86 50 51 77 53 80 88 109 88 50 84 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 105 85 114 87 100 82 47 113 77 72 51 122 72 103 47 48 67 106 72 56 54 54 75 103 116 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 51 104 108 87 89 120 56 68 79 55 112 109 118 116 105 66 85 49 117 76 113 71 87 76 88 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 114 105 118 97 116 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 80 119 70 99 117 113 81 88 51 74 78 118 88 89 65 119 57 110 101 110 88 103 87 101 72 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 108 120 99 99 78 114 87 117 69 104 43 88 69 81 81 103 70 109 83 120 82 108 102 80 73 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 113 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 76 104 108 99 70 54 68 69 110 67 77 76 118 43 50 83 97 70 112 114 86 48 84 90 70 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 71 75 79 75 113 48 102 75 80 71 47 113 87 121 73 104 53 121 79 74 107 111 82 76 87 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 108 112 84 107 71 83 51 84 77 70 115 56 53 86 100 84 119 78 70 68 48 103 101 119 82 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 55 78 52 103 109 68 79 50 115 119 119 86 109 111 111 97 97 76 109 74 113 90 108 70 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 110 70 104 43 119 100 120 110 107 100 67 122 98 89 116 83 85 119 110 83 55 72 116 87 82 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 82 66 87 101 82 67 104 103 73 68 119 119 98 108 57 109 86 87 118 65 113 115 113 104 85 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 66 50 108 80 49 47 100 49 100 87 117 85 48 100 107 88 88 57 111 98 68 53 84 116 108 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 117 98 108 105 99 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 115 117 51 67 72 56 102 79 53 106 99 111 120 121 105 101 85 99 105 67 71 89 79 54 109 69 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 79 65 69 80 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 113 90 118 122 57 47 99 120 122 101 74 47 56 97 53 112 83 98 78 50 110 56 67 84 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 79 75 86 67 112 72 98 114 55 48 118 81 76 106 106 98 122 100 108 43 105 56 118 54 98 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 102 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 74 75 51 67 79 111 50 99 102 111 112 119 53 57 56 82 118 71 79 110 82 66 113 101 85 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 106 99 49 120 105 85 57 79 105 74 100 100 52 67 90 81 80 67 71 73 116 101 110 120 106 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 70 111 88 109 65 71 68 116 111 70 71 51 82 81 85 76 120 73 108 115 57 89 77 97 85 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 82 115 97 80 114 101 109 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 49 69 69 104 120 68 113 115 109 85 120 117 56 49 73 47 74 109 53 114 49 56 68 121 48 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 49 84 74 74 116 113 113 79 103 56 109 121 112 109 117 52 101 54 65 97 76 69 84 49 78 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 48 112 51 113 122 109 77 87 120 110 43 115 54 78 75 108 77 76 75 57 47 79 103 82 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 122 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 43 90 83 67 114 117 117 65 56 43 50 71 47 115 119 103 51 82 84 89 68 48 48 51 105 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 111 86 81 69 53 57 69 75 76 105 76 56 89 81 56 83 77 52 103 121 75 49 79 88 72 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 106 102 54 115 109 76 114 49 100 70 68 108 98 55 43 76 49 43 54 48 97 84 98 81 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 74 110 90 72 88 106 100 105 113 108 49 66 113 108 109 67 68 111 53 118 89 89 66 84 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 65 103 114 101 101 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 74 80 122 70 75 49 90 79 49 70 78 102 67 68 120 99 72 73 110 121 111 111 48 43 107 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 111 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 73 69 110 111 53 53 99 75 106 84 98 122 120 102 75 117 101 79 50 112 87 100 121 110 106 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 102 84 79 57 120 120 52 50 106 75 118 98 50 113 67 118 57 111 114 66 113 117 110 70 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 106 65 105 80 99 78 74 116 114 78 98 56 109 104 111 79 47 99 50 52 89 74 71 107 81 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 72 52 52 90 103 85 54 50 76 74 97 77 85 57 48 119 103 98 48 72 121 122 51 72 112 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 118 98 118 119 73 106 77 102 86 122 66 119 115 106 97 115 69 76 48 43 43 77 105 105 113 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 83 65 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 109 120 79 78 107 103 84 71 76 106 50 83 109 78 97 85 115 100 122 76 102 57 68 79 43 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 98 116 77 88 103 108 99 73 120 48 119 80 69 69 80 107 72 79 86 84 100 49 52 68 119 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 103 117 75 89 122 122 119 111 86 89 121 101 83 67 74 43 66 83 110 67 103 118 70 55 87 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 113 79 79 111 67 88 82 115 70 85 57 52 49 119 65 49 110 100 102 106 82 84 80 48 81 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 101 78 86 71 79 103 97 119 78 70 70 81 112 112 48 113 105 103 78 69 52 52 119 78 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 90 109 110 67 70 51 107 80 47 77 43 51 99 107 84 108 88 80 66 84 75 87 113 104 69 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 72 85 110 112 87 69 74 105 87 105 80 116 110 79 111 48 104 116 82 83 99 81 107 116 86 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 115 76 52 56 55 102 51 115 68 122 70 86 75 70 110 43 80 118 57 119 50 100 67 117 69 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 85 85 71 78 52 51 53 75 74 66 88 121 99 121 111 84 50 75 82 89 109 54 118 66 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 103 107 97 67 111 54 109 73 97 76 118 43 87 87 113 88 90 53 102 57 86 65 120 82 115 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 112 68 52 72 66 49 55 66 54 51 43 109 115 120 43 49 109 57 117 77 50 90 109 76 50 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 49 121 117 68 102 51 106 74 111 83 72 65 122 120 88 106 88 72 110 48 110 52 107 68 115 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 80 114 102 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 102 68 53 56 52 114 87 72 90 70 89 75 54 57 43 119 76 83 103 117 88 108 106 52 110 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 81 69 117 65 74 116 103 121 112 111 79 71 52 105 68 112 72 111 101 82 97 118 68 48 107 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 74 70 120 69 48 89 86 106 73 88 107 118 108 86 50 65 116 109 85 49 121 122 98 111 108 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 99 118 81 54 116 119 69 81 115 108 114 97 67 43 81 47 66 121 71 48 114 79 110 99 76 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 106 105 107 66 119 117 102 115 88 86 68 103 85 71 103 81 69 81 111 116 56 120 66 87 115 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 109 108 55 43 74 111 101 67 112 118 43 112 84 50 114 73 86 121 68 52 88 69 98 106 104 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 49 111 76 121 113 83 56 56 90 53 101 105 106 74 52 102 121 88 115 104 108 66 82 118 73 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 106 54 52 52 110 66 72 108 55 70 68 90 43 107 47 72 65 67 49 84 120 103 113 82 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 53 88 87 99 120 121 72 102 97 43 48 48 90 78 50 117 55 71 79 114 102 99 89 81 48 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 81 86 110 49 85 79 65 74 66 69 50 55 66 48 77 84 97 76 115 107 43 109 88 115 49 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 56 83 74 102 113 90 114 81 74 76 77 83 83 71 50 68 106 120 118 116 54 108 76 80 89 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 68 116 98 50 98 87 102 89 108 56 50 88 65 115 86 77 90 106 56 71 73 69 77 112 71 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 103 98 119 98 48 81 117 74 89 115 50 120 47 76 49 117 90 120 109 57 111 78 53 115 115 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 109 107 122 122 70 83 67 114 116 85 102 80 111 78 99 97 76 100 70 72 84 110 82 119 69 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 100 87 89 76 117 112 116 47 50 77 116 117 89 120 98 51 122 99 69 107 87 90 69 111 87 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 65 112 111 113 82 81 89 101 117 104 55 53 105 84 75 66 106 118 108 101 115 85 69 113 114 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 49 90 85 78 51 118 97 51 68 117 52 77 119 104 75 68 72 118 83 78 89 76 102 83 50 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 108 104 106 100 79 66 89 121 121 121 104 52 90 67 112 48 81 107 110 74 107 111 88 67 83 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 117 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 50 85 101 76 49 110 119 101 71 102 101 89 51 69 108 115 73 99 86 90 70 52 90 118 103 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 77 54 115 76 122 83 83 52 86 47 105 102 68 75 65 47 49 68 119 122 80 113 68 67 86 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 56 99 82 71 79 108 53 56 55 78 119 114 66 104 83 74 90 122 69 78 68 67 107 112 56 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 57 71 51 89 120 68 113 104 70 100 79 55 112 71 110 81 90 98 66 110 70 119 70 43 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 76 115 106 115 117 80 116 85 119 113 80 115 111 54 84 76 83 114 84 84 67 74 104 52 57 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 101 97 108 101 100 79 98 106 101 99 116 70 111 114 75 101 121 80 114 111 116 101 99 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 54 79 118 43 116 121 87 67 87 67 102 53 73 51 52 72 53 117 85 109 97 121 76 119 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 109 89 102 88 111 77 114 81 104 97 120 55 98 99 104 70 55 53 49 105 110 109 102 43 80 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 48 76 79 51 116 73 56 86 69 74 66 79 82 48 82 66 110 51 99 51 55 72 50 54 90 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 65 82 67 70 79 85 82 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 113 109 114 98 83 54 51 73 66 56 103 77 80 48 81 75 119 56 90 72 101 113 73 84 74 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 118 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 120 68 122 53 80 43 87 57 119 100 55 56 103 50 97 72 98 79 54 97 81 119 43 98 71 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 74 120 48 83 78 82 80 77 81 72 116 53 117 97 50 117 99 54 57 121 106 71 117 74 73 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 82 67 50 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 114 117 67 54 71 119 90 113 51 121 51 86 72 52 49 86 108 112 72 85 79 67 48 78 111 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 49 47 56 115 53 99 109 108 112 104 77 109 56 82 56 114 85 87 51 102 75 70 55 85 83 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 75 101 121 77 97 116 101 114 105 97 108 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 82 43 90 72 109 87 49 112 84 69 86 85 82 119 98 75 57 122 83 116 113 69 89 84 113 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 75 97 53 75 47 110 102 118 105 121 69 120 89 84 114 119 116 117 78 70 69 115 77 106 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 79 65 79 85 68 85 106 110 104 114 89 105 122 111 114 88 54 56 116 52 108 103 80 116 50 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 84 89 83 52 82 103 78 53 116 101 73 84 102 76 100 72 48 105 111 110 86 66 86 118 47 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 77 87 48 105 47 109 107 104 50 52 89 74 52 49 69 72 102 56 121 54 113 122 81 122 66 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 87 89 105 102 111 98 97 68 122 49 53 81 76 54 80 57 65 76 70 97 103 87 88 106 88 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 83 86 103 118 80 79 122 117 55 71 53 86 56 86 113 57 56 116 66 107 69 52 100 82 90 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 114 85 51 90 49 43 101 99 75 111 89 119 120 82 73 76 80 71 113 120 67 56 87 50 122 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 75 68 70 50 72 109 97 99 83 72 65 49 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 99 112 115 112 90 51 111 65 54 114 118 76 54 118 109 86 83 106 85 108 74 81 108 43 120 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 113 105 51 47 122 77 102 108 112 120 97 76 48 67 76 65 78 98 79 53 104 73 70 66 104 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 43 87 102 103 84 78 108 107 89 74 110 43 111 71 118 52 108 76 47 70 101 54 106 90 107 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 36 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 13 10 32 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 77 66 68 84 106 67 57 70 87 73 98 68 90 119 100 47 76 101 99 118 83 106 48 57 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 84 81 114 82 104 106 114 75 99 43 87 68 84 82 57 82 74 74 107 78 104 90 47 81 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 80 97 105 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 80 50 81 79 85 106 88 122 120 89 89 106 72 50 115 80 77 122 79 69 116 68 122 106 118 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 49 76 54 99 50 88 115 118 69 56 85 85 77 86 47 106 103 79 81 84 82 74 117 73 90 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 121 53 75 50 106 98 89 107 114 74 47 101 72 69 101 55 80 90 99 76 116 87 82 81 114 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 83 114 53 51 104 110 78 117 54 122 73 115 56 68 107 89 117 98 48 108 90 122 83 73 57 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 114 83 121 67 75 87 89 76 54 74 114 97 66 108 80 97 69 84 53 83 53 48 72 113 56 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 82 67 70 79 85 82 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 84 71 70 48 88 111 48 71 71 103 97 99 111 69 110 56 113 116 85 118 47 98 68 87 79 65 61 13 10 13 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
299
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2028321037
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
300
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
2028321037
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
301
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
301
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
300
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
2028321037
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
299
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2028321037
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
298
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
2028321037
1
arg0[..]

1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
302
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1554728497
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
303
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1554728497
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
304
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
304
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
303
this
222339261
1
this.sigSpi
1308517931
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
234413847
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1554728497
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
302
this
222339261
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
412543611
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1554728497
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
305
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
612288369
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
306
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
306
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
307
arg0
1068884468
1
arg1
2136465006
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
612288369
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
308
arg0
612288369
1
arg0.toString
"SHA1withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
309

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
309
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
308
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
612288369
1
arg0.toString
"SHA1withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
307
this
1640778002
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
2136465006
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
arg1
2136465006
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
612288369
1
arg2.toString
"SHA1withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
305
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
612288369
1
arg0.toString
"SHA1withRSA"
1
return
1640778002
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
612288369
1
return.algorithm.toString
"SHA1withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
310
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
311
this
1640778002
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
2136465006
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
312
this
1640778002
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1068884468
1
this.serviceIterator
2136465006
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
313
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
313
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1068884468
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
314
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
315

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
315
this
466097575
1
this.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
314
java.security.Signature$Delegate.warnCount
10
1
arg0
1068884468
1
return
466097575
1
return.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
316
this
1640778002
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2136465006
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
466097575
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
316
this
1640778002
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
2136465006
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
466097575
1
arg0.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
482859406
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
312
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
482859406
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
311
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
310
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
482859406
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
317
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1829082416
1
arg0[..]

1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
318
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1829082416
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 45 77 97 105 110 45 65 116 116 114 105 98 117 116 101 115 58 32 74 119 53 115 75 120 55 111 115 86 48 120 122 100 79 115 117 67 87 87 51 67 114 122 87 122 107 61 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 54 46 48 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 73 115 116 105 75 52 55 55 112 103 51 47 83 101 122 65 65 99 75 81 70 116 116 75 54 54 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 116 74 73 52 98 98 54 73 74 114 83 103 54 78 111 121 88 69 78 49 54 57 74 89 83 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 106 53 99 75 55 80 71 74 75 107 79 104 82 87 68 48 113 56 68 52 122 113 83 79 88 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 80 75 67 83 49 50 80 66 69 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 71 100 84 117 83 79 101 88 109 114 118 83 66 54 110 97 102 51 56 86 90 108 112 107 110 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 43 113 118 50 77 71 100 66 112 120 108 118 102 109 101 111 70 80 109 68 71 99 65 97 101 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 67 110 76 104 120 65 99 108 99 51 43 75 49 66 83 86 116 88 119 84 77 75 122 56 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 97 101 79 121 57 70 107 119 77 84 82 105 111 82 76 57 114 49 115 57 114 88 87 75 84 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 55 97 72 69 104 67 77 82 88 65 70 57 112 118 80 56 102 102 89 49 119 114 80 97 78 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 106 81 43 54 48 86 53 66 113 122 113 51 106 117 90 107 57 114 97 57 122 110 120 54 121 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 101 114 103 52 55 116 69 87 73 106 121 110 74 50 122 99 83 73 83 112 103 75 47 85 112 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 118 67 102 82 120 97 50 107 90 84 86 104 71 119 56 67 112 78 70 57 111 106 85 112 47 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 120 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 111 77 115 84 108 81 43 120 109 77 117 79 121 49 99 89 54 114 111 90 97 74 68 85 112 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 79 53 111 88 78 80 106 72 99 76 87 102 53 86 110 71 78 47 120 104 53 47 109 74 43 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 112 47 107 107 89 99 49 53 106 109 113 79 113 52 70 52 70 100 81 50 81 105 77 99 107 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 51 84 108 72 75 102 55 85 47 84 89 117 70 103 86 83 86 56 66 84 68 99 121 85 76 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 108 43 84 56 117 106 80 74 72 68 57 98 111 67 69 50 86 87 83 71 104 116 72 111 76 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 72 103 55 90 107 56 115 120 78 56 66 105 71 67 86 50 51 77 53 80 88 109 88 50 84 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 105 85 114 87 100 82 47 113 77 72 51 122 72 103 47 48 67 106 72 56 54 54 75 103 116 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 51 104 108 87 89 120 56 68 79 55 112 109 118 116 105 66 85 49 117 76 113 71 87 76 88 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 114 105 118 97 116 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 80 119 70 99 117 113 81 88 51 74 78 118 88 89 65 119 57 110 101 110 88 103 87 101 72 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 108 120 99 99 78 114 87 117 69 104 43 88 69 81 81 103 70 109 83 120 82 108 102 80 73 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 113 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 76 104 108 99 70 54 68 69 110 67 77 76 118 43 50 83 97 70 112 114 86 48 84 90 70 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 71 75 79 75 113 48 102 75 80 71 47 113 87 121 73 104 53 121 79 74 107 111 82 76 87 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 108 112 84 107 71 83 51 84 77 70 115 56 53 86 100 84 119 78 70 68 48 103 101 119 82 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 55 78 52 103 109 68 79 50 115 119 119 86 109 111 111 97 97 76 109 74 113 90 108 70 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 110 70 104 43 119 100 120 110 107 100 67 122 98 89 116 83 85 119 110 83 55 72 116 87 82 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 82 66 87 101 82 67 104 103 73 68 119 119 98 108 57 109 86 87 118 65 113 115 113 104 85 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 66 50 108 80 49 47 100 49 100 87 117 85 48 100 107 88 88 57 111 98 68 53 84 116 108 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 117 98 108 105 99 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 115 117 51 67 72 56 102 79 53 106 99 111 120 121 105 101 85 99 105 67 71 89 79 54 109 69 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 79 65 69 80 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 113 90 118 122 57 47 99 120 122 101 74 47 56 97 53 112 83 98 78 50 110 56 67 84 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 79 75 86 67 112 72 98 114 55 48 118 81 76 106 106 98 122 100 108 43 105 56 118 54 98 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 102 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 74 75 51 67 79 111 50 99 102 111 112 119 53 57 56 82 118 71 79 110 82 66 113 101 85 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 106 99 49 120 105 85 57 79 105 74 100 100 52 67 90 81 80 67 71 73 116 101 110 120 106 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 70 111 88 109 65 71 68 116 111 70 71 51 82 81 85 76 120 73 108 115 57 89 77 97 85 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 82 115 97 80 114 101 109 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 49 69 69 104 120 68 113 115 109 85 120 117 56 49 73 47 74 109 53 114 49 56 68 121 48 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 49 84 74 74 116 113 113 79 103 56 109 121 112 109 117 52 101 54 65 97 76 69 84 49 78 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 48 112 51 113 122 109 77 87 120 110 43 115 54 78 75 108 77 76 75 57 47 79 103 82 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 122 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 43 90 83 67 114 117 117 65 56 43 50 71 47 115 119 103 51 82 84 89 68 48 48 51 105 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 111 86 81 69 53 57 69 75 76 105 76 56 89 81 56 83 77 52 103 121 75 49 79 88 72 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 82 67 50 95 52 48 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 106 102 54 115 109 76 114 49 100 70 68 108 98 55 43 76 49 43 54 48 97 84 98 81 120 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 74 110 90 72 88 106 100 105 113 108 49 66 113 108 109 67 68 111 53 118 89 89 66 84 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 65 103 114 101 101 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 74 80 122 70 75 49 90 79 49 70 78 102 67 68 120 99 72 73 110 121 111 111 48 43 107 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 111 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 73 69 110 111 53 53 99 75 106 84 98 122 120 102 75 117 101 79 50 112 87 100 121 110 106 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 102 84 79 57 120 120 52 50 106 75 118 98 50 113 67 118 57 111 114 66 113 117 110 70 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 51 56 52 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 106 65 105 80 99 78 74 116 114 78 98 56 109 104 111 79 47 99 50 52 89 74 71 107 81 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 72 52 52 90 103 85 54 50 76 74 97 77 85 57 48 119 103 98 48 72 121 122 51 72 112 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 118 98 118 119 73 106 77 102 86 122 66 119 115 106 97 115 69 76 48 43 43 77 105 105 113 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 83 65 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 109 120 79 78 107 103 84 71 76 106 50 83 109 78 97 85 115 100 122 76 102 57 68 79 43 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 98 116 77 88 103 108 99 73 120 48 119 80 69 69 80 107 72 79 86 84 100 49 52 68 119 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 103 117 75 89 122 122 119 111 86 89 121 101 83 67 74 43 66 83 110 67 103 118 70 55 87 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 113 79 79 111 67 88 82 115 70 85 57 52 49 119 65 49 110 100 102 106 82 84 80 48 81 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 115 108 77 97 99 67 111 114 101 36 83 115 108 77 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 101 78 86 71 79 103 97 119 78 70 70 81 112 112 48 113 105 103 78 69 52 52 119 78 88 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 75 67 83 49 50 80 66 69 67 105 112 104 101 114 67 111 114 101 36 80 66 69 87 105 116 104 83 72 65 49 65 110 100 68 69 83 101 100 101 13 10 32 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 90 109 110 67 70 51 107 80 47 77 43 51 99 107 84 108 88 80 66 84 75 87 113 104 69 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 72 85 110 112 87 69 74 105 87 105 80 116 110 79 111 48 104 116 82 83 99 81 107 116 86 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 50 53 54 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 115 76 52 56 55 102 51 115 68 122 70 86 75 70 110 43 80 118 57 119 50 100 67 117 69 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 106 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 85 85 71 78 52 51 53 75 74 66 88 121 99 121 111 84 50 75 82 89 109 54 118 66 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 103 107 97 67 111 54 109 73 97 76 118 43 87 87 113 88 90 53 102 57 86 65 120 82 115 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 80 97 114 97 109 101 116 101 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 112 68 52 72 66 49 55 66 54 51 43 109 115 120 43 49 109 57 117 77 50 90 109 76 50 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 49 121 117 68 102 51 106 74 111 83 72 65 122 120 88 106 88 72 110 48 110 52 107 68 115 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 80 114 102 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 102 68 53 56 52 114 87 72 90 70 89 75 54 57 43 119 76 83 103 117 88 108 106 52 110 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 81 69 117 65 74 116 103 121 112 111 79 71 52 105 68 112 72 111 101 82 97 118 68 48 107 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 74 70 120 69 48 89 86 106 73 88 107 118 108 86 50 65 116 109 85 49 121 122 98 111 108 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 99 118 81 54 116 119 69 81 115 108 114 97 67 43 81 47 66 121 71 48 114 79 110 99 76 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 106 105 107 66 119 117 102 115 88 86 68 103 85 71 103 81 69 81 111 116 56 120 66 87 115 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 87 114 97 112 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 109 108 55 43 74 111 101 67 112 118 43 112 84 50 114 73 86 121 68 52 88 69 98 106 104 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 72 109 97 99 83 72 65 53 49 50 75 71 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 49 111 76 121 113 83 56 56 90 53 101 105 106 74 52 102 121 88 115 104 108 66 82 118 73 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 106 54 52 52 110 66 72 108 55 70 68 90 43 107 47 72 65 67 49 84 120 103 113 82 119 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 99 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 53 88 87 99 120 121 72 102 97 43 48 48 90 78 50 117 55 71 79 114 102 99 89 81 48 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 81 86 110 49 85 79 65 74 66 69 50 55 66 48 77 84 97 76 115 107 43 109 88 115 49 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 56 83 74 102 113 90 114 81 74 76 77 83 83 71 50 68 106 120 118 116 54 108 76 80 89 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 68 116 98 50 98 87 102 89 108 56 50 88 65 115 86 77 90 106 56 71 73 69 77 112 71 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 103 98 119 98 48 81 117 74 89 115 50 120 47 76 49 117 90 120 109 57 111 78 53 115 115 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 109 107 122 122 70 83 67 114 116 85 102 80 111 78 99 97 76 100 70 72 84 110 82 119 69 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 100 87 89 76 117 112 116 47 50 77 116 117 89 120 98 51 122 99 69 107 87 90 69 111 87 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 65 112 111 113 82 81 89 101 117 104 55 53 105 84 75 66 106 118 108 101 115 85 69 113 114 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 87 105 116 104 77 68 53 65 110 100 68 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 49 90 85 78 51 118 97 51 68 117 52 77 119 104 75 68 72 118 83 78 89 76 102 83 50 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 108 104 106 100 79 66 89 121 121 121 104 52 90 67 112 48 81 107 110 74 107 111 88 67 83 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 117 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 50 85 101 76 49 110 119 101 71 102 101 89 51 69 108 115 73 99 86 90 70 52 90 118 103 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 77 54 115 76 122 83 83 52 86 47 105 102 68 75 65 47 49 68 119 122 80 113 68 67 86 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 56 99 82 71 79 108 53 56 55 78 119 114 66 104 83 74 90 122 69 78 68 67 107 112 56 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 57 71 51 89 120 68 113 104 70 100 79 55 112 71 110 81 90 98 66 110 70 119 70 43 85 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 97 105 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 76 115 106 115 117 80 116 85 119 113 80 115 111 54 84 76 83 114 84 84 67 74 104 52 57 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 101 97 108 101 100 79 98 106 101 99 116 70 111 114 75 101 121 80 114 111 116 101 99 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 53 54 79 118 43 116 121 87 67 87 67 102 53 73 51 52 72 53 117 85 109 97 121 76 119 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 109 89 102 88 111 77 114 81 104 97 120 55 98 99 104 70 55 53 49 105 110 109 102 43 80 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 48 76 79 51 116 73 56 86 69 74 66 79 82 48 82 66 110 51 99 51 55 72 50 54 90 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 65 82 67 70 79 85 82 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 113 109 114 98 83 54 51 73 66 56 103 77 80 48 81 75 119 56 90 72 101 113 73 84 74 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 118 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 120 68 122 53 80 43 87 57 119 100 55 56 103 50 97 72 98 79 54 97 81 119 43 98 71 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 74 120 48 83 78 82 80 77 81 72 116 53 117 97 50 117 99 54 57 121 106 71 117 74 73 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 36 82 67 50 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 114 117 67 54 71 119 90 113 51 121 51 86 72 52 49 86 108 112 72 85 79 67 48 78 111 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 49 47 56 115 53 99 109 108 112 104 77 109 56 82 56 114 85 87 51 102 75 70 55 85 83 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 75 101 121 77 97 116 101 114 105 97 108 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 82 43 90 72 109 87 49 112 84 69 86 85 82 119 98 75 57 122 83 116 113 69 89 84 113 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 75 97 53 75 47 110 102 118 105 121 69 120 89 84 114 119 116 117 78 70 69 115 77 106 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 69 83 101 100 101 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 79 65 79 85 68 85 106 110 104 114 89 105 122 111 114 88 54 56 116 52 108 103 80 116 50 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 66 108 111 119 102 105 115 104 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 84 89 83 52 82 103 78 53 116 101 73 84 102 76 100 72 48 105 111 110 86 66 86 118 47 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 75 101 121 71 101 110 101 114 97 116 111 114 67 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 77 87 48 105 47 109 107 104 50 52 89 74 52 49 69 72 102 56 121 54 113 122 81 122 66 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 69 75 101 121 70 97 99 116 111 114 121 36 80 66 69 87 105 116 104 77 68 53 65 110 100 84 114 105 112 108 101 68 69 83 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 87 89 105 102 111 98 97 68 122 49 53 81 76 54 80 57 65 76 70 97 103 87 88 106 88 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 83 86 103 118 80 79 122 117 55 71 53 86 56 86 113 57 56 116 66 107 69 52 100 82 90 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 82 67 50 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 114 85 51 90 49 43 101 99 75 111 89 119 120 82 73 76 80 71 113 120 67 56 87 50 122 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 80 66 75 68 70 50 72 109 97 99 83 72 65 49 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 99 112 115 112 90 51 111 65 54 114 118 76 54 118 109 86 83 106 85 108 74 81 108 43 120 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 77 68 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 113 105 51 47 122 77 102 108 112 120 97 76 48 67 76 65 78 98 79 53 104 73 70 66 104 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 74 99 101 75 101 121 83 116 111 114 101 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 43 87 102 103 84 78 108 107 89 74 110 43 111 71 118 52 108 76 47 70 101 54 106 90 107 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 71 101 110 101 114 97 116 111 114 36 84 108 115 77 97 115 116 101 114 83 101 99 114 101 116 13 10 32 75 101 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 77 66 68 84 106 67 57 70 87 73 98 68 90 119 100 47 76 101 99 118 83 106 48 57 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 97 98 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 84 81 114 82 104 106 114 75 99 43 87 68 84 82 57 82 74 74 107 78 104 90 47 81 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 68 72 75 101 121 80 97 105 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 80 50 81 79 85 106 88 122 120 89 89 106 72 50 115 80 77 122 79 69 116 68 122 106 118 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 72 109 97 99 83 72 65 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 49 76 54 99 50 88 115 118 69 56 85 85 77 86 47 106 103 79 81 84 82 74 117 73 90 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 83 117 110 74 67 69 95 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 121 53 75 50 106 98 89 107 114 74 47 101 72 69 101 55 80 90 99 76 116 87 82 81 114 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 75 101 121 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 83 114 53 51 104 110 78 117 54 122 73 115 56 68 107 89 117 98 48 108 90 122 83 73 57 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 69 83 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 114 83 121 67 75 87 89 76 54 74 114 97 66 108 80 97 69 84 53 83 53 48 72 113 56 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 99 114 121 112 116 111 47 112 114 111 118 105 100 101 114 47 65 82 67 70 79 85 82 67 105 112 104 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 84 71 70 48 88 111 48 71 71 103 97 99 111 69 110 56 113 116 85 118 47 98 68 87 79 65 61 13 10 13 10]
1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
319
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1829082416
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
320
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
320
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
319
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1829082416
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
318
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1829082416
1
arg0[..]

1
arg1
0
1
arg2
10786
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
317
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1829082416
1
arg0[..]

1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
321
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
159758907
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
322
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
159758907
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
323
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
323
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
322
this
1640778002
1
this.sigSpi
466097575
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$SHA1withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
718368487
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
159758907
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
321
this
1640778002
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
612288369
1
this.algorithm.toString
"SHA1withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
159758907
1
arg0[..]
[50 33 123 -80 -19 10 113 88 117 -18 -14 -46 -44 -26 88 103 28 -28 -55 91 -8 50 53 -32 53 -47 107 -104 80 108 16 -114 45 105 -5 115 -72 98 81 -117 -86 103 -113 70 74 93 31 -53 8 -83 59 -86 10 -52 21 66 57 2 65 110 -51 17 12 43 31 9 100 -106 6 36 87 32 -127 -82 -66 -34 51 -50 -88 -2 79 104 59 0 -91 -84 74 -31 -63 -69 4 87 16 31 -79 -72 -53 -7 30 82 71 -103 30 67 -120 81 127 17 104 58 35 33 -102 90 124 26 38 2 80 -102 -29 -116 125 121 -41 42 -5 -4]
1
return
true
1

java.security.Signature.getInstance(java.lang.String):::ENTER
this_invocation_nonce
324
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
425429203
1
arg0.toString
"MD5withRSA"
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
325
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
325
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::ENTER
this_invocation_nonce
326
arg0
1636683913
1
arg1
1215553958
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
425429203
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.Signature(java.lang.String):::ENTER
this_invocation_nonce
327
arg0
425429203
1
arg0.toString
"MD5withRSA"
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
328

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
328
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
this.appRandom
null
1

java.security.Signature.Signature(java.lang.String):::EXIT137
this_invocation_nonce
327
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
425429203
1
arg0.toString
"MD5withRSA"
1

java.security.Signature$Delegate.Signature$Delegate(java.security.Provider$Service, java.util.Iterator, java.lang.String):::EXIT901
this_invocation_nonce
326
this
803438195
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1215553958
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
arg1
1215553958
1
arg1.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
arg2
425429203
1
arg2.toString
"MD5withRSA"
1

java.security.Signature.getInstance(java.lang.String):::EXIT201
this_invocation_nonce
324
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
425429203
1
arg0.toString
"MD5withRSA"
1
return
803438195
1
return.getClass()
"java.security.Signature$Delegate"
1
return.algorithm
425429203
1
return.algorithm.toString
"MD5withRSA"
1
return.provider
null
1
return.provider.getClass()
nonsensical
2
return.state
0
1

java.security.Signature.initVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
329
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
null
1
this.provider.getClass()
nonsensical
2
this.state
0
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
171880054
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::ENTER
this_invocation_nonce
330
this
803438195
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1215553958
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
171880054
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
331
this
803438195
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
1636683913
1
this.serviceIterator
1215553958
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
171880054
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature.isSpi(java.security.Provider$Service):::ENTER
this_invocation_nonce
332
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1

java.security.Signature.isSpi(java.security.Provider$Service):::EXIT273
this_invocation_nonce
332
java.security.Signature.debug
null
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1636683913
1
return
true
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::ENTER
this_invocation_nonce
333
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1

java.security.SignatureSpi.SignatureSpi():::ENTER
this_invocation_nonce
334

java.security.SignatureSpi.SignatureSpi():::EXIT40
this_invocation_nonce
334
this
422562363
1
this.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.appRandom
null
1

java.security.Signature$Delegate.newInstance(java.security.Provider$Service):::EXIT943
this_invocation_nonce
333
java.security.Signature$Delegate.warnCount
10
1
arg0
1636683913
1
return
422562363
1
return.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
return.appRandom
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::ENTER
this_invocation_nonce
335
this
803438195
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1215553958
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
422562363
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
171880054
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom):::EXIT1081
this_invocation_nonce
335
this
803438195
1
this.sigSpi
null
1
this.sigSpi.getClass()
nonsensical
2
this.sigSpi.appRandom
nonsensical
2
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
1215553958
1
this.serviceIterator.getClass()
"sun.security.jca.ProviderList$ServiceList$1"
1
java.security.Signature$Delegate.warnCount
10
1
arg0
422562363
1
arg0.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
arg0.appRandom
null
1
arg1
1
1
arg2
171880054
1
arg2.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg3
null
1

java.security.Signature$Delegate.chooseProvider(int, java.security.Key, java.security.SecureRandom):::EXIT1038
this_invocation_nonce
331
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1
1
arg1
171880054
1
arg1.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1
arg2
null
1

java.security.Signature$Delegate.engineInitVerify(java.security.PublicKey):::EXIT1090
this_invocation_nonce
330
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
171880054
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.initVerify(java.security.PublicKey):::EXIT422
this_invocation_nonce
329
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
171880054
1
arg0.getClass()
"sun.security.rsa.RSAPublicKeyImpl"
1

java.security.Signature.update(byte[]):::ENTER
this_invocation_nonce
336
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
277214312
1
arg0[..]
[83 105 103 110 97 116 117 114 101 45 86 101 114 115 105 111 110 58 32 49 46 48 13 10 83 72 65 49 45 68 105 103 101 115 116 45 77 97 110 105 102 101 115 116 58 32 52 52 103 84 85 108 104 54 117 113 108 54 105 71 51 50 84 66 114 71 81 75 49 115 102 78 81 61 13 10 67 114 101 97 116 101 100 45 66 121 58 32 49 46 51 46 49 32 40 83 117 110 32 77 105 99 114 111 115 121 115 116 101 109 115 32 73 110 99 46 41 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 66 97 99 107 65 99 116 105 111 110 36 84 105 109 101 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 116 69 106 70 66 53 56 74 100 104 109 106 50 110 54 109 82 120 103 53 76 54 51 117 79 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 55 50 55 57 66 111 108 104 54 121 101 57 98 68 114 108 48 99 108 88 79 47 107 113 109 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 78 111 110 110 101 103 97 116 105 118 101 73 110 116 101 103 101 114 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 69 51 106 114 73 104 48 111 85 57 113 111 43 80 106 112 106 122 98 85 111 116 115 74 121 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 69 110 118 105 114 111 110 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 99 100 74 88 115 48 51 69 54 54 88 85 104 74 116 80 55 97 76 84 102 67 72 98 101 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 78 101 120 116 68 111 99 71 101 110 101 114 97 116 111 114 72 101 97 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 85 104 117 79 74 108 56 80 70 118 88 115 73 86 109 76 67 121 79 85 102 101 97 115 48 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 80 97 114 115 101 114 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 114 53 115 113 122 56 75 70 107 116 106 68 119 47 55 97 69 66 90 118 84 48 77 104 101 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 76 105 116 101 77 111 114 112 104 95 101 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 117 101 66 73 73 74 79 83 56 55 82 67 82 83 111 83 75 52 70 50 89 74 48 117 112 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 72 101 108 112 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 66 47 51 119 113 72 79 89 121 79 88 108 106 54 107 78 89 104 82 78 81 65 56 80 122 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 86 105 101 119 65 119 97 114 101 67 111 109 112 111 110 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 83 89 43 118 109 52 86 47 112 119 106 43 67 114 81 117 86 108 57 83 83 83 83 81 47 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 78 111 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 51 104 65 99 75 75 81 67 54 107 84 67 51 48 114 49 66 108 98 43 105 80 101 78 69 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 80 114 105 110 116 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 119 56 108 72 89 73 106 48 54 78 54 83 83 73 101 70 69 78 105 102 68 76 56 112 54 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 73 110 100 101 120 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 99 113 85 70 85 103 67 79 111 70 87 83 47 118 69 66 73 104 101 66 117 122 101 47 67 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 111 99 117 109 101 110 116 76 105 115 116 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 66 72 68 70 98 105 88 53 99 82 107 104 102 112 51 66 80 75 90 107 111 118 99 121 48 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 71 108 111 115 115 97 114 121 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 119 79 47 81 49 52 99 116 104 104 77 105 74 106 86 78 79 89 72 52 55 73 99 54 113 86 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 67 111 109 112 97 99 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 53 111 76 51 65 69 82 65 75 52 69 90 71 72 98 73 109 97 54 106 54 53 114 67 69 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 83 101 116 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 82 68 101 109 122 109 122 104 80 112 86 121 81 97 102 102 48 109 74 47 102 112 88 99 55 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 79 110 73 116 101 109 67 117 114 115 111 114 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 50 51 122 75 108 75 87 77 66 77 73 101 112 76 49 57 82 70 115 53 43 57 111 102 116 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 67 117 115 116 111 109 68 111 99 117 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 79 65 90 120 74 106 76 104 84 84 88 81 73 48 57 51 67 108 106 82 78 57 104 56 78 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 83 101 97 114 99 104 84 79 67 73 116 101 109 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 112 80 77 107 90 52 79 117 49 118 43 78 47 47 80 90 77 50 53 69 89 88 75 76 114 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 84 97 103 80 114 111 112 101 114 116 105 101 115 36 69 109 112 116 121 69 110 117 109 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 73 48 79 107 117 52 107 43 80 102 84 113 56 75 86 78 84 76 112 108 79 81 88 104 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 101 102 97 117 108 116 83 101 97 114 99 104 69 110 103 105 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 84 122 77 87 114 98 67 81 103 112 50 99 66 55 84 121 69 89 50 88 90 72 101 79 88 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 84 101 120 116 72 101 108 112 77 111 100 101 108 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 75 108 74 84 98 69 53 87 78 68 74 43 81 85 83 75 84 99 97 99 106 116 52 116 84 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 73 110 116 101 103 101 114 65 114 114 97 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 51 117 51 99 74 66 82 55 105 86 88 72 55 49 119 100 117 113 47 70 110 73 77 113 79 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 83 101 116 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 80 79 73 71 66 71 84 107 121 70 55 87 89 71 113 56 98 121 51 110 51 108 57 118 88 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 79 67 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 88 113 109 73 75 69 55 50 98 65 71 87 122 86 65 111 78 100 109 51 105 50 53 74 108 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 82 101 108 111 97 100 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 115 56 57 50 70 117 117 117 54 116 99 76 81 55 99 105 57 114 50 112 109 108 77 103 67 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 72 105 115 116 111 114 121 77 111 100 101 108 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 68 51 110 115 47 70 102 114 68 97 81 66 86 89 65 68 55 88 97 120 101 97 88 116 112 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 67 117 115 116 111 109 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 97 70 57 54 72 53 111 105 121 74 117 107 110 71 84 80 108 85 83 109 113 122 86 108 109 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 78 97 118 105 103 97 116 111 114 115 84 69 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 69 85 83 74 82 98 101 89 107 88 86 57 117 49 109 71 115 87 68 48 89 109 97 85 79 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 74 72 80 114 105 110 116 97 98 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 107 102 90 89 118 49 103 82 108 76 97 108 65 120 73 75 79 113 103 51 80 85 100 112 111 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 56 117 74 120 55 71 85 66 97 114 88 86 68 111 75 106 88 69 80 112 65 85 72 108 52 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 79 110 73 116 101 109 67 117 114 115 111 114 46 112 114 111 112 101 114 116 105 101 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 121 66 81 77 70 83 75 97 110 98 65 43 53 106 66 82 104 80 101 51 78 98 81 122 109 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 81 117 101 114 121 69 110 103 105 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 66 99 47 121 53 75 109 119 112 122 83 56 103 121 73 118 82 65 117 43 47 89 102 47 111 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 67 117 115 116 111 109 68 111 99 117 109 101 110 116 36 67 117 115 116 111 109 82 101 97 100 101 114 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 116 100 76 101 84 78 80 55 101 116 53 54 86 53 105 114 110 88 70 43 48 55 52 83 79 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 66 97 99 107 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 76 102 56 81 76 87 90 65 56 73 85 51 104 110 107 88 103 97 80 113 75 107 107 85 88 73 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 73 110 100 101 120 78 97 118 105 103 97 116 111 114 85 73 36 78 97 118 83 119 105 110 103 87 111 114 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 117 74 99 102 76 90 122 88 100 84 110 109 71 108 82 89 113 57 89 82 67 76 117 78 122 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 83 116 114 101 97 109 68 101 99 111 109 112 114 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 74 109 119 48 57 102 109 89 120 79 74 90 89 97 73 66 86 85 116 49 117 107 71 107 115 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 122 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 66 102 110 57 109 106 99 74 106 79 120 77 99 72 115 76 110 73 107 105 72 117 73 116 112 75 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 105 116 83 116 111 114 101 78 111 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 79 84 108 54 50 70 98 85 97 88 75 66 48 78 71 118 122 119 77 54 110 70 97 104 119 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 68 101 102 97 117 108 116 72 101 108 112 72 105 115 116 111 114 121 77 111 100 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 52 51 100 114 80 99 88 105 100 115 65 80 53 116 114 57 88 122 113 104 57 115 99 54 72 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 97 114 99 104 84 79 67 73 116 101 109 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 120 115 57 53 56 97 121 85 110 71 85 122 110 69 67 80 77 51 82 86 104 79 86 84 111 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 80 97 103 101 83 101 116 117 112 84 104 114 101 97 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 88 66 100 120 85 85 110 50 118 99 49 55 43 70 101 48 120 57 50 109 88 52 78 49 119 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 76 111 119 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 108 79 88 117 108 87 78 103 65 108 118 102 120 115 90 66 74 43 122 77 117 72 86 112 75 75 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 101 114 103 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 50 118 111 73 115 122 78 48 121 88 102 107 43 68 66 51 109 114 100 114 67 98 74 56 115 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 109 112 114 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 103 114 50 71 98 79 98 110 69 78 117 114 80 118 88 100 75 121 76 77 78 72 122 43 100 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 71 108 111 115 115 97 114 121 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 71 57 101 76 98 86 117 75 119 82 49 78 114 101 78 104 87 119 89 76 117 88 99 122 81 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 77 101 116 97 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 116 121 83 117 89 48 90 108 106 75 68 110 98 55 112 102 119 73 75 76 77 86 73 70 55 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 70 117 108 108 66 116 114 101 101 68 105 99 116 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 104 66 99 115 77 53 51 79 106 107 107 53 74 118 100 112 113 104 98 118 119 72 49 48 106 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 114 105 110 116 83 101 116 117 112 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 90 78 85 88 116 47 82 99 112 49 100 54 52 89 113 86 88 87 107 78 69 119 108 55 54 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 71 101 110 101 114 97 116 111 114 72 101 97 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 119 81 52 118 99 72 48 57 77 118 99 116 81 66 106 52 70 122 98 74 68 85 122 67 97 98 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 68 110 68 67 117 114 115 111 114 46 112 114 111 112 101 114 116 105 101 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 84 97 82 71 88 103 43 83 107 52 109 80 117 51 48 118 82 87 97 76 49 105 78 116 85 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 43 52 54 72 80 75 67 56 90 120 69 87 121 112 105 83 78 69 48 112 56 72 117 54 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 49 95 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 108 99 98 113 112 73 117 49 104 69 65 84 89 47 84 71 86 86 89 83 52 69 50 74 68 78 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 82 101 109 111 118 101 65 99 116 105 111 110 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 117 111 89 121 65 56 85 119 72 89 98 73 101 79 109 66 118 110 70 75 47 69 76 80 117 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 106 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 104 52 69 57 47 49 111 99 90 83 67 75 112 113 98 114 49 104 121 68 48 74 108 71 108 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 70 117 108 108 66 116 114 101 101 68 105 99 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 49 69 103 109 55 106 50 77 121 66 88 81 52 108 116 115 107 113 71 118 47 87 107 43 54 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 36 68 105 115 112 108 97 121 72 101 108 112 70 114 111 109 83 111 117 114 99 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 118 84 73 102 106 100 90 74 69 104 108 85 69 73 65 100 66 102 90 80 122 100 120 70 74 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 108 97 116 77 97 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 53 76 89 110 81 56 71 73 112 110 120 49 57 53 73 55 90 113 55 69 117 99 57 73 83 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 76 105 110 107 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 69 49 121 48 78 98 82 82 67 118 75 98 72 114 52 112 65 67 89 48 78 103 109 90 115 98 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 65 105 99 113 77 87 103 71 71 81 83 104 102 116 118 107 108 81 86 73 112 66 113 54 97 72 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 72 101 97 100 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 88 106 69 108 120 99 48 57 51 104 104 107 85 68 83 109 86 90 116 43 82 43 50 107 107 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 50 55 68 103 106 56 57 50 72 81 52 84 87 90 70 114 86 89 88 121 107 47 69 116 72 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 66 97 99 107 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 86 54 53 106 87 111 43 117 71 109 55 84 85 109 68 115 83 48 109 98 87 56 71 114 57 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 85 116 105 108 105 116 105 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 89 83 57 120 53 90 43 79 57 97 89 81 73 43 70 102 114 51 57 117 73 80 47 101 66 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 69 76 74 113 101 89 119 116 90 118 108 80 101 49 115 51 85 107 48 53 71 72 48 74 111 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 66 97 99 107 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 56 86 80 82 105 108 112 101 101 75 110 117 118 68 69 70 72 54 68 102 81 74 68 48 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 68 97 116 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 69 65 103 106 99 76 83 66 77 107 74 115 74 97 101 65 103 115 110 52 55 119 76 86 116 108 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 84 79 67 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 88 108 54 48 81 57 87 90 117 107 73 80 77 48 54 122 102 98 55 118 73 120 69 50 77 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 118 119 117 102 108 111 70 52 79 102 110 110 56 106 80 77 98 108 113 73 73 53 112 55 114 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 101 114 103 101 36 68 101 102 97 117 108 116 77 101 114 103 101 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 117 68 110 52 81 80 78 69 54 81 101 51 87 67 104 111 76 82 112 102 55 51 108 80 104 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 78 97 118 105 103 97 116 111 114 115 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 120 54 100 52 121 57 109 85 101 117 55 82 90 90 74 87 116 68 70 90 77 54 118 88 106 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 85 73 36 83 101 97 114 99 104 73 116 101 109 115 70 111 117 110 100 46 99 108 13 10 32 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 115 81 112 74 55 88 116 100 48 98 98 116 101 109 101 109 56 119 54 48 99 90 54 54 70 100 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 86 105 101 119 36 70 97 118 111 114 105 116 101 115 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 106 74 57 111 69 112 57 90 48 71 49 120 117 78 47 84 43 72 78 50 72 50 56 119 113 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 85 73 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 50 97 98 51 99 51 107 107 117 80 97 107 100 86 48 118 66 122 88 121 53 106 80 119 102 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 52 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 53 117 76 68 107 69 81 78 114 111 107 71 99 90 80 43 49 118 43 105 112 75 115 79 80 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 84 79 67 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 99 100 86 103 103 106 108 88 100 86 108 111 116 56 43 103 122 106 106 81 75 73 51 77 107 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 77 111 100 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 101 107 81 67 122 81 97 69 104 74 103 76 49 105 103 110 116 106 108 113 43 66 51 70 110 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 71 84 75 67 117 114 115 111 114 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 106 66 88 86 120 56 69 89 105 57 81 49 67 121 99 97 100 49 78 89 119 75 66 75 108 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 80 111 112 117 112 67 111 109 112 111 110 101 110 116 65 100 97 112 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 99 74 117 76 47 53 97 57 102 53 67 99 111 112 111 90 49 69 57 100 99 98 49 87 71 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 80 97 114 115 101 114 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 109 70 100 50 69 110 90 48 80 120 56 111 74 100 101 77 99 47 98 69 54 80 65 50 77 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 117 120 76 50 107 82 88 57 88 111 81 50 122 50 78 120 79 76 77 87 65 105 112 50 88 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 70 97 118 111 114 105 116 101 115 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 106 54 98 69 97 76 73 49 71 72 70 66 71 82 107 103 117 72 85 105 83 79 70 104 47 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 117 114 115 111 114 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 68 47 49 55 122 104 49 100 106 77 72 117 103 114 73 110 88 73 106 71 97 112 73 50 80 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 101 120 116 72 101 108 112 77 111 100 101 108 36 72 105 103 104 108 105 103 104 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 77 101 108 77 78 75 54 73 65 49 116 100 51 98 81 79 48 122 121 47 80 76 117 88 78 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 82 101 108 111 97 100 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 56 49 111 111 89 103 65 100 71 49 99 67 76 82 71 118 49 105 78 43 114 103 118 116 120 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 65 112 112 101 110 100 77 101 114 103 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 79 103 55 107 100 47 75 69 73 78 83 102 55 69 55 106 109 116 100 85 98 85 89 98 98 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 73 110 100 101 120 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 113 111 56 76 48 76 79 108 89 85 76 119 76 85 52 56 104 97 78 54 82 107 53 106 86 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 73 115 105 110 100 13 10 32 101 120 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 56 83 54 77 102 106 84 112 78 101 110 100 84 43 111 74 98 105 85 109 57 104 82 80 77 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 79 67 86 105 101 119 36 84 79 67 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 53 107 49 72 74 90 76 79 84 122 68 121 122 88 109 80 86 121 71 122 65 116 105 117 47 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 72 105 103 104 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 105 86 112 47 111 117 76 68 69 54 47 78 82 120 50 117 84 90 71 104 112 74 108 82 65 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 83 116 121 108 101 13 10 32 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 80 118 47 68 88 48 116 52 47 100 69 98 74 99 81 87 87 112 78 122 117 107 97 80 107 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 70 117 108 108 66 116 114 101 101 68 105 99 116 36 69 110 116 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 81 54 88 87 112 119 49 120 103 75 110 107 106 74 77 84 77 71 104 65 49 102 85 110 106 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 69 109 112 116 121 80 114 105 110 116 97 98 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 107 74 113 110 83 87 115 99 89 89 50 55 68 70 111 86 106 115 112 79 110 48 112 117 90 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 97 114 99 104 72 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 74 101 100 81 107 49 105 112 75 118 100 66 120 54 57 88 121 97 82 56 105 75 104 98 75 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 80 114 105 110 116 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 104 65 48 98 118 48 66 97 113 114 113 50 69 68 112 71 78 113 81 50 105 103 115 106 110 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 65 70 70 105 108 101 70 97 99 116 111 114 121 79 110 49 50 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 122 82 103 74 43 43 52 97 110 77 75 107 79 114 72 68 111 110 108 113 77 47 56 98 82 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 117 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 102 56 108 84 77 87 74 51 102 77 101 73 89 71 67 108 111 109 43 70 67 53 104 103 70 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 72 105 115 116 111 114 121 77 111 100 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 76 98 104 119 47 66 49 119 72 55 55 90 107 90 49 119 118 47 70 51 55 66 77 116 116 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 97 114 99 104 84 79 67 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 119 86 106 113 113 77 103 57 81 74 54 111 48 115 51 86 47 113 105 112 48 73 122 83 43 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 67 111 112 121 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 122 109 97 52 72 106 105 73 85 99 120 55 74 67 66 117 56 43 89 71 98 78 89 72 100 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 77 101 114 103 105 110 103 83 101 97 114 99 104 69 110 103 105 110 101 36 77 101 114 103 105 110 103 83 101 97 114 99 104 81 117 101 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 57 78 43 53 90 115 108 65 43 90 48 70 66 71 101 86 106 74 98 107 50 88 84 110 71 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 36 68 101 102 97 117 108 116 72 101 108 112 83 101 116 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 118 83 73 79 109 68 78 87 80 71 112 108 119 79 101 76 74 99 67 98 118 105 43 54 48 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 113 88 110 73 110 43 69 99 99 53 79 116 43 71 99 65 113 85 66 117 121 81 73 108 98 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 98 117 86 52 83 52 88 67 88 119 72 83 55 47 100 104 104 51 106 105 87 103 100 84 110 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 65 90 112 102 99 83 105 109 65 112 104 52 81 102 78 105 114 120 117 81 48 79 89 74 73 85 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 118 97 108 105 100 78 97 118 105 103 97 116 111 114 86 105 101 119 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 119 74 118 73 111 105 55 114 100 98 106 49 73 84 71 115 98 116 51 100 70 81 56 54 56 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 83 101 99 111 110 100 97 114 121 86 105 101 119 101 114 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 56 81 55 100 100 90 109 89 99 83 70 110 85 68 88 105 56 116 71 89 85 111 54 67 118 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 86 97 108 105 100 97 116 101 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 121 82 109 47 99 110 86 117 70 104 76 99 74 72 72 102 105 90 116 70 66 101 90 99 47 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 85 110 105 116 101 65 112 112 101 110 100 77 101 114 103 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 116 49 53 71 79 43 47 119 107 68 78 109 78 50 75 116 111 119 49 73 119 90 53 101 116 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 77 97 110 97 103 101 114 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 110 113 107 104 111 56 82 72 43 66 57 70 102 82 105 56 47 52 116 54 103 110 89 75 74 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 80 97 114 97 103 13 10 32 114 97 112 104 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 66 107 67 79 76 109 43 51 67 75 113 117 79 66 48 84 43 83 77 56 100 50 98 82 77 118 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 80 97 103 101 84 114 97 110 115 102 111 114 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 53 88 115 85 56 111 107 84 81 90 89 85 109 111 51 73 104 78 81 82 70 49 54 89 106 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 85 73 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 114 104 67 79 81 81 109 115 113 110 99 116 88 65 83 98 115 119 65 68 98 67 71 56 108 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 85 116 105 108 105 116 105 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 70 111 79 121 119 77 116 67 54 98 80 86 115 49 50 47 111 116 104 109 76 102 103 98 87 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 51 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 87 89 75 57 54 107 79 75 110 86 121 55 67 47 69 108 79 89 57 72 67 72 106 81 73 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 99 79 97 107 57 54 84 50 50 114 107 52 114 89 120 80 120 67 84 113 106 118 79 83 120 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 87 105 110 100 111 119 80 114 101 115 101 110 116 97 116 105 111 110 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 52 88 52 65 72 107 53 49 97 78 104 84 107 119 49 48 87 120 81 86 72 101 74 87 71 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 76 111 119 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 77 102 90 74 103 112 81 70 79 66 55 66 111 88 70 80 89 112 114 78 97 87 90 70 86 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 81 117 101 114 121 72 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 100 47 57 116 74 112 113 120 115 81 66 73 97 81 68 97 120 105 111 50 67 100 101 102 78 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 80 111 112 117 112 77 111 117 115 101 87 104 101 101 108 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 105 117 111 51 52 80 79 108 102 118 56 117 115 57 43 109 110 78 50 49 84 76 117 47 77 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 65 70 70 105 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 56 87 118 121 76 55 106 85 67 100 109 80 121 119 90 77 98 74 51 72 53 88 114 69 55 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 111 108 101 70 105 108 108 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 66 85 84 74 54 83 100 65 88 121 71 55 82 106 103 101 111 88 102 118 79 67 72 47 97 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 114 101 115 101 110 116 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 78 54 89 78 55 85 53 100 49 102 112 71 78 49 69 113 67 74 110 72 105 101 121 108 74 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 67 111 109 112 97 99 116 111 114 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 66 73 89 97 117 80 88 71 65 70 73 77 57 98 76 74 115 102 116 68 47 85 106 116 75 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 70 117 108 108 66 116 114 101 101 68 105 99 116 36 70 117 108 108 68 105 99 116 66 108 111 99 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 56 66 65 114 108 52 83 106 97 97 101 108 110 87 81 56 98 67 81 112 120 111 81 77 98 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 85 110 115 117 112 112 111 114 116 101 100 79 112 101 114 97 116 105 111 110 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 101 73 52 43 97 100 114 47 57 89 117 76 69 70 48 73 107 57 54 110 71 99 98 105 80 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 84 79 67 67 101 108 108 82 101 110 100 101 114 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 77 114 109 86 97 83 112 57 74 106 80 112 106 49 78 55 103 100 114 72 53 88 109 114 67 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 114 121 77 97 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 103 101 78 107 88 47 99 87 116 74 103 85 65 77 99 47 65 76 106 84 90 80 78 70 116 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 36 83 99 114 111 108 108 84 111 80 111 115 105 116 105 111 110 46 99 108 97 115 13 10 32 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 98 82 88 117 87 84 80 66 73 88 66 81 88 49 84 90 97 72 55 120 82 105 84 54 101 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 66 80 97 114 116 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 85 57 72 102 88 102 103 81 109 120 78 113 43 98 113 57 57 72 43 114 50 85 79 85 73 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 69 108 99 88 86 99 116 78 67 74 122 102 77 70 115 67 65 97 71 53 101 83 82 107 89 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 68 111 99 80 67 111 110 115 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 77 115 112 85 65 112 51 106 115 48 83 107 47 52 82 100 86 82 90 122 122 101 87 47 71 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 70 97 99 116 111 114 121 36 72 101 108 112 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 76 97 87 101 90 112 108 71 54 122 116 122 122 53 116 100 74 57 110 109 78 81 77 75 66 106 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 121 115 103 67 121 78 116 67 55 105 112 100 49 113 71 73 78 121 103 112 70 115 113 118 105 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 122 103 55 90 80 101 57 121 51 74 43 112 119 106 70 105 113 120 67 77 85 90 99 56 53 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 79 67 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 56 120 89 49 112 100 49 116 120 121 118 122 102 112 89 74 113 109 102 85 110 117 102 73 102 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 36 74 72 69 100 105 116 111 114 80 97 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 100 69 110 90 98 110 88 110 75 101 78 99 120 113 84 75 52 90 102 47 114 85 71 81 81 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 76 111 119 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 68 88 122 97 101 72 115 87 75 106 80 107 112 87 115 104 75 66 54 99 78 112 73 43 87 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 86 117 113 55 107 78 75 115 101 105 65 68 106 115 55 52 72 79 113 78 89 81 67 78 67 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 36 68 105 99 116 66 108 111 99 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 103 78 116 119 74 75 43 101 118 50 104 71 117 118 84 114 68 50 55 99 110 56 105 81 115 115 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 77 101 109 111 114 121 82 65 70 70 105 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 47 111 82 111 119 51 51 68 101 114 115 117 87 105 120 86 53 110 111 84 85 104 50 109 75 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 114 101 101 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 88 117 83 67 119 118 119 78 119 47 115 98 97 98 107 85 118 49 121 84 57 116 47 50 121 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 81 117 101 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 65 107 86 104 50 105 118 65 57 80 122 55 111 82 113 70 81 65 87 112 66 89 105 54 80 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 77 121 66 117 102 102 101 114 101 100 82 101 97 100 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 122 117 54 100 84 98 86 73 101 83 108 72 119 86 75 101 65 90 100 73 103 105 78 105 49 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 36 77 97 110 97 103 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 87 56 97 47 110 66 57 82 75 51 43 121 102 72 56 85 75 80 70 72 80 88 107 75 50 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 105 116 83 116 111 114 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 84 65 86 103 81 56 70 87 120 121 83 65 98 84 118 53 53 118 81 65 78 79 120 85 74 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 78 101 120 116 68 111 99 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 69 53 107 87 109 75 113 69 51 78 78 109 77 115 56 98 79 54 76 73 118 107 71 56 115 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 113 56 70 114 80 116 104 47 108 120 54 70 73 112 105 109 122 57 47 73 117 90 89 49 100 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 77 101 114 103 105 110 103 83 101 97 114 99 104 69 110 103 105 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 108 90 118 107 56 121 49 66 83 112 107 70 103 73 48 78 48 50 110 53 104 51 87 104 70 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 87 105 110 100 111 119 80 114 101 115 101 110 116 97 116 105 111 110 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 85 50 113 83 74 88 121 89 103 105 116 52 89 72 98 56 115 108 122 68 113 112 120 67 100 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 104 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 120 100 78 101 74 107 69 57 98 84 106 99 89 55 87 69 103 109 70 81 115 70 81 66 76 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 111 109 101 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 115 77 74 98 48 80 117 67 108 57 43 105 107 73 69 50 107 90 82 121 47 102 89 81 118 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 73 110 100 101 120 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 122 87 43 68 84 43 66 118 48 54 105 114 69 119 82 102 53 102 121 73 87 76 56 69 69 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 80 111 112 117 112 76 105 115 116 101 110 101 114 46 99 108 13 10 32 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 43 110 97 51 52 108 82 66 99 80 106 77 65 106 117 82 67 105 65 109 120 122 112 80 68 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 85 116 105 108 105 116 105 101 115 36 76 111 99 97 108 101 80 97 105 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 47 56 53 77 65 47 53 101 54 100 68 74 110 87 103 54 86 98 104 89 107 90 65 43 121 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 87 105 110 100 111 119 80 114 101 115 101 110 116 97 116 105 111 110 36 87 105 110 100 111 119 80 114 111 112 101 114 116 121 67 104 97 110 103 101 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 119 111 114 99 85 47 122 102 87 54 66 75 51 122 101 113 85 47 102 49 71 71 43 89 52 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 36 68 105 115 112 108 97 121 72 101 108 112 70 114 111 109 70 111 99 117 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 110 49 66 121 108 49 77 110 112 84 106 84 76 54 69 108 56 47 51 88 111 114 107 98 122 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 97 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 68 55 114 117 69 67 80 114 99 55 72 102 54 119 67 111 98 108 78 83 115 89 102 77 55 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 111 99 117 109 101 110 116 67 111 109 112 114 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 112 85 108 105 122 107 55 118 65 79 102 57 106 55 108 49 117 75 50 78 121 66 119 111 109 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 80 114 101 65 99 13 10 32 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 98 79 76 66 53 83 66 114 107 102 110 57 101 106 88 109 79 120 102 111 76 43 110 108 55 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 100 101 120 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 80 79 113 71 78 77 67 115 105 66 43 87 47 112 119 118 90 50 115 119 104 55 99 50 98 115 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 84 105 116 108 101 13 10 32 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 51 116 57 89 68 82 51 90 111 78 116 86 103 106 69 88 102 109 112 112 51 98 114 72 72 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 114 118 108 101 116 72 101 108 112 66 114 111 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 112 54 54 97 118 122 113 107 66 120 121 56 66 97 106 114 90 88 69 100 51 121 57 52 103 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 68 110 68 67 117 114 115 111 114 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 98 112 120 71 52 56 121 108 106 106 115 54 89 108 81 71 73 69 51 98 118 79 106 107 107 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 114 50 76 116 87 115 81 87 105 111 118 112 119 106 106 99 120 101 80 118 80 115 67 117 79 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 36 68 105 115 112 108 97 121 72 101 108 112 65 102 116 101 114 84 114 97 99 107 105 110 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 116 80 114 87 57 77 97 50 113 113 119 56 79 119 89 110 43 120 72 88 85 99 85 90 69 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 100 101 120 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 73 83 65 106 68 48 117 110 78 97 110 89 68 43 85 84 105 119 69 120 113 120 120 83 70 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 78 97 118 105 103 97 116 111 114 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 108 66 47 71 73 103 115 72 80 47 86 52 97 70 106 75 110 113 90 56 98 102 82 101 51 74 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 71 114 111 117 112 71 101 110 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 57 68 77 111 76 48 105 56 74 65 76 99 104 115 78 112 109 98 88 69 111 73 99 121 89 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 111 99 117 109 101 110 116 76 105 115 116 115 36 77 105 99 114 111 73 110 100 101 120 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 87 105 85 116 48 105 99 108 70 74 57 84 100 50 90 88 65 99 108 110 89 116 109 53 79 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 67 117 115 116 111 109 68 111 99 117 109 101 110 116 36 67 117 115 116 111 109 82 101 97 100 101 114 36 79 98 106 13 10 32 101 99 116 65 99 116 105 111 110 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 97 49 86 115 117 119 73 89 110 51 48 112 48 65 72 53 78 67 109 116 72 104 50 102 68 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 70 97 118 111 114 105 116 101 115 84 114 101 101 46 99 108 13 10 32 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 120 53 69 84 72 76 55 80 54 66 112 90 99 114 56 120 90 83 71 77 76 112 53 78 49 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 72 101 108 112 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 120 43 78 122 86 48 71 81 120 113 90 54 110 101 84 111 110 50 56 67 66 48 82 53 89 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 80 114 105 110 116 83 101 116 117 112 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 118 121 112 57 103 118 47 122 122 121 47 72 51 87 86 72 53 101 47 49 65 43 116 50 69 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 109 112 114 101 115 115 111 114 73 116 101 114 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 69 105 75 103 57 87 115 121 55 79 107 114 113 115 77 82 97 49 90 73 116 89 114 71 72 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 73 110 100 101 120 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 86 53 50 106 83 66 77 101 121 79 65 76 78 88 90 122 118 65 86 104 85 52 89 48 79 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 111 114 119 97 114 100 65 99 116 105 111 110 36 84 105 109 101 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 50 99 97 102 121 48 82 75 122 111 110 88 57 106 112 49 112 122 120 65 52 108 76 74 107 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 67 101 108 108 82 101 110 100 101 114 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 83 56 83 116 111 47 53 82 99 76 85 89 84 108 69 90 105 53 97 56 115 69 98 51 109 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 50 49 121 110 82 68 106 117 105 50 121 89 79 80 107 80 89 114 116 100 116 82 83 105 69 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 70 97 118 111 114 105 116 101 115 78 97 118 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 57 121 71 115 85 73 106 89 65 89 120 83 97 99 86 115 43 85 101 73 43 122 100 82 51 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 72 105 103 104 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 89 115 101 82 52 100 85 72 118 116 65 49 85 112 90 75 115 89 54 69 90 97 122 72 56 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 100 101 120 86 105 101 119 36 68 101 102 97 117 108 116 73 110 100 101 120 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 68 71 49 101 83 88 110 104 118 98 76 114 86 77 107 67 113 105 82 81 50 76 82 90 99 79 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 73 110 100 101 120 66 117 105 108 100 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 69 70 52 115 68 101 117 74 74 86 99 97 70 56 117 107 55 51 68 73 121 99 99 80 111 90 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 68 101 102 97 117 108 116 72 101 108 112 77 111 100 101 108 36 68 101 102 97 117 108 116 72 105 103 104 108 105 103 104 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 101 107 103 116 106 87 67 70 78 106 54 90 73 106 73 43 51 83 89 77 118 82 85 111 73 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 106 72 79 100 71 54 70 117 78 119 49 110 81 106 100 83 98 100 113 109 65 57 54 47 108 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 70 111 114 109 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 76 70 117 74 103 109 97 114 49 78 107 118 48 85 79 72 101 111 113 72 57 107 87 119 69 85 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 114 121 77 97 112 36 84 114 121 69 110 117 109 101 114 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 53 106 75 98 121 114 102 81 107 84 68 81 57 102 105 119 99 105 85 105 85 118 90 120 87 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 77 97 110 97 103 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 117 69 99 57 57 78 115 70 69 54 118 116 113 72 116 80 89 115 81 117 103 78 99 109 98 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 83 99 104 101 109 97 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 84 69 56 50 48 56 50 115 77 110 84 84 71 108 73 84 112 99 88 69 122 72 115 85 100 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 121 116 101 65 114 114 97 121 68 101 99 111 109 112 114 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 87 68 97 117 104 84 50 108 100 88 84 120 113 68 113 52 97 116 79 48 117 114 113 82 106 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 69 110 116 114 121 80 114 111 99 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 97 107 54 71 43 88 65 110 117 110 116 54 104 65 80 88 49 71 112 43 107 48 68 71 111 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 77 97 112 65 99 13 10 32 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 65 76 49 105 98 72 68 50 49 118 77 52 121 100 112 114 65 102 75 50 74 70 49 83 115 116 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 105 116 66 117 102 102 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 49 65 98 83 121 87 97 101 68 76 74 83 65 78 107 73 56 71 110 68 113 47 112 106 68 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 71 108 111 115 115 97 114 121 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 118 49 75 86 52 51 56 67 82 115 100 80 50 111 104 84 88 48 108 88 76 118 111 78 65 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 72 105 103 104 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 105 106 57 122 114 112 50 48 84 119 80 89 106 121 114 90 71 116 69 88 118 112 50 102 86 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 84 101 109 112 111 114 97 114 121 82 65 70 70 105 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 83 113 82 53 74 48 68 68 110 110 67 112 121 105 56 106 86 89 55 114 75 117 97 56 101 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 80 97 115 116 101 65 99 116 105 111 110 46 99 108 97 115 13 10 32 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 50 90 116 102 115 79 109 70 113 117 56 83 114 122 110 87 101 81 70 50 107 98 111 71 54 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 102 105 103 70 105 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 56 80 49 101 50 75 103 107 105 113 55 69 101 108 97 67 113 119 87 87 71 110 103 99 97 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 81 117 101 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 87 121 84 53 121 74 86 47 87 67 111 87 118 67 78 100 121 73 116 77 72 104 72 105 109 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 78 97 118 105 103 97 116 111 114 36 65 99 99 101 115 115 105 98 108 101 74 72 101 108 112 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 101 97 119 119 65 67 83 43 115 70 116 70 103 98 43 102 84 65 115 89 89 99 100 69 119 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 76 97 110 103 69 108 101 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 83 53 88 75 55 122 119 57 52 71 79 90 90 85 103 49 74 88 111 83 47 85 71 72 55 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 69 118 101 110 116 76 105 115 116 101 110 101 114 76 105 115 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 68 115 66 120 87 82 47 54 117 57 105 109 55 109 106 99 74 86 84 83 113 86 97 74 84 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 67 111 110 116 101 110 116 86 105 101 119 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 76 106 110 81 74 71 98 119 66 106 68 112 82 109 116 105 49 74 121 55 90 98 65 113 53 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 119 53 90 54 97 75 47 97 97 48 97 48 86 79 103 72 110 85 113 116 48 115 119 89 108 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 76 111 119 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 76 102 87 87 72 99 68 112 97 85 83 89 115 71 66 67 53 111 122 82 57 65 47 54 76 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 84 97 103 65 99 13 10 32 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 86 65 108 98 111 43 101 89 43 83 78 51 55 65 97 105 79 50 116 50 79 113 66 43 71 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 97 105 110 87 105 110 100 111 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 71 98 86 83 47 82 110 116 74 76 116 117 119 118 98 83 119 57 74 43 53 57 118 49 84 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 36 80 111 115 105 116 105 111 110 83 111 114 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 82 98 103 109 116 122 74 87 98 48 48 86 108 105 79 104 85 65 102 115 72 118 113 109 84 71 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 70 111 114 119 97 114 100 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 109 77 52 88 87 109 112 102 80 70 116 47 102 122 119 112 78 97 75 87 97 108 117 47 108 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 36 72 101 108 112 83 101 116 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 75 43 55 120 106 55 116 47 73 99 67 89 67 47 73 115 75 119 90 108 114 108 71 109 83 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 79 110 73 116 101 109 67 117 114 115 111 114 46 112 114 111 112 101 114 116 105 101 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 105 73 83 84 102 76 99 89 77 97 57 102 102 114 55 77 69 49 65 111 117 68 99 121 77 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 65 98 115 116 114 97 99 116 72 101 108 112 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 76 112 99 103 50 118 112 78 72 50 65 71 67 53 50 109 103 81 77 43 57 108 112 107 52 106 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 70 111 114 109 84 13 10 32 97 103 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 68 57 86 79 90 110 76 53 112 105 66 102 80 71 84 87 119 103 55 74 66 72 65 70 49 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 36 80 97 103 101 76 111 97 100 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 66 50 111 78 120 108 106 73 113 54 69 71 107 119 88 104 115 80 82 107 79 70 77 69 90 114 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 82 101 108 111 97 100 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 85 67 119 113 77 47 69 54 89 88 110 79 75 51 76 109 81 53 74 56 79 118 118 108 75 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 73 110 100 101 120 101 114 75 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 87 122 115 69 119 57 120 98 43 120 47 53 97 102 112 73 82 53 70 54 99 102 116 84 112 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 87 114 116 113 119 86 74 116 114 56 76 69 80 108 76 111 108 56 98 72 117 119 114 121 102 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 67 117 116 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 90 65 105 114 71 76 50 80 76 65 77 88 121 57 103 55 70 77 105 53 87 103 113 87 53 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 68 110 68 67 117 114 115 111 114 46 112 114 111 112 101 114 116 105 101 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 56 79 54 117 98 47 82 65 113 118 73 83 78 118 84 48 100 70 108 66 98 101 72 108 99 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 118 97 108 105 100 72 101 108 112 83 101 116 67 111 110 116 101 120 116 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 66 101 70 56 90 98 101 99 104 85 82 106 52 88 115 80 79 72 70 57 90 112 80 76 49 70 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 66 97 99 107 65 99 116 105 111 110 36 72 105 115 116 111 114 121 65 99 116 105 111 110 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 111 117 107 118 104 99 57 118 86 117 88 112 90 122 43 53 47 88 72 103 100 120 117 98 80 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 67 104 97 114 97 13 10 32 99 116 101 114 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 108 105 43 106 85 65 114 105 112 98 98 112 81 52 43 112 108 110 84 115 56 101 113 112 100 43 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 78 97 116 105 118 101 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 86 43 73 49 83 99 47 83 99 79 100 89 51 48 101 57 114 97 86 73 66 68 115 50 84 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 80 97 114 97 109 101 116 101 114 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 77 81 100 100 104 109 119 98 83 56 56 100 104 111 90 56 72 107 122 49 81 113 105 81 108 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 77 111 117 115 101 72 97 110 100 108 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 73 43 75 120 101 106 102 111 47 102 88 68 75 52 68 84 50 56 103 51 100 83 97 115 100 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 84 79 67 73 116 101 109 84 69 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 85 109 107 65 81 99 115 49 116 118 111 86 52 118 85 55 72 75 43 113 70 73 55 113 79 51 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 50 102 52 51 70 104 53 107 65 98 101 72 102 100 49 85 77 66 82 105 50 77 113 72 77 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 65 100 100 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 109 74 89 86 107 97 111 56 102 49 56 118 48 101 121 113 90 76 82 120 75 79 89 119 105 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 51 76 121 120 114 74 83 90 118 112 113 80 69 97 48 43 76 97 66 76 72 83 66 82 65 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 47 90 121 77 55 97 104 115 105 52 90 100 90 83 50 51 122 47 81 85 90 48 90 72 79 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 118 80 84 50 98 83 105 55 119 66 99 113 76 81 57 71 100 54 108 106 100 85 119 56 106 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 47 87 43 104 104 86 119 50 77 122 50 97 47 53 122 88 76 69 106 87 79 118 107 108 50 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 68 111 99 117 109 101 110 116 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 69 81 117 77 121 89 110 118 43 81 117 57 88 100 68 47 71 47 53 73 109 121 118 56 73 56 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 73 116 101 109 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 47 116 87 52 82 109 122 70 98 49 122 75 89 109 110 90 65 107 81 102 83 109 83 83 77 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 116 47 117 111 98 106 71 74 83 66 69 56 76 78 49 75 107 86 120 55 111 117 84 54 108 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 84 97 103 80 114 111 112 101 114 116 105 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 55 82 119 50 120 102 87 47 109 78 114 82 82 87 43 54 120 100 84 76 121 101 69 50 75 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 111 114 119 97 114 100 65 99 116 105 111 110 36 72 105 115 116 111 114 121 65 99 116 105 111 110 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 71 75 73 81 90 70 50 50 115 107 84 69 47 108 121 88 56 86 99 55 54 100 121 106 117 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 66 97 100 73 68 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 50 119 103 98 114 57 83 73 103 48 102 72 67 103 88 79 114 106 116 120 77 50 120 90 86 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 80 114 111 99 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 57 86 53 73 106 82 85 67 49 57 99 111 49 120 53 100 81 101 112 115 120 122 56 108 84 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 67 101 108 108 82 101 110 100 101 114 101 114 36 86 97 108 117 101 74 76 97 98 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 67 114 87 55 48 108 74 55 106 54 89 110 83 55 84 108 83 88 52 74 72 101 111 56 105 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 72 105 103 104 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 76 48 78 85 118 82 77 111 106 65 89 43 70 121 73 66 83 109 70 83 107 110 72 57 78 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 77 101 100 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 51 78 85 69 57 84 109 117 77 51 86 79 77 112 55 111 97 84 105 115 109 80 54 120 70 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 77 111 100 101 108 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 118 121 51 74 115 102 121 103 113 88 89 55 51 86 71 88 108 87 52 120 50 81 114 90 115 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 70 97 118 111 114 105 116 101 115 78 97 118 105 103 97 116 111 114 85 73 36 70 111 108 100 101 114 65 99 116 105 111 110 46 99 108 97 13 10 32 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 99 71 77 75 90 70 52 84 115 103 71 77 86 72 76 50 90 79 104 108 82 115 67 50 115 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 83 112 101 99 105 13 10 32 97 108 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 104 121 85 101 99 66 49 71 103 86 52 121 66 114 106 73 76 85 73 104 118 116 108 102 117 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 101 87 67 110 89 52 113 77 71 108 78 72 110 54 83 72 65 77 89 113 112 71 50 79 83 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 68 101 102 97 117 108 116 72 101 108 112 66 114 111 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 76 102 113 120 120 99 106 82 98 66 71 51 100 50 102 116 113 121 88 118 54 84 110 47 116 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 79 110 73 116 101 109 67 117 114 115 111 114 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 89 103 112 87 86 48 88 43 101 56 89 68 82 67 121 121 75 75 78 87 73 99 76 73 121 89 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 36 65 99 99 101 115 115 105 98 108 101 74 72 101 108 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 111 85 90 82 110 119 102 77 102 100 102 114 85 80 120 68 85 105 120 83 49 101 78 78 57 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 73 110 100 101 120 67 101 108 108 82 101 110 100 101 114 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 72 75 75 87 117 43 54 105 52 97 77 77 55 54 98 43 48 118 76 49 86 101 70 78 75 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 70 97 118 111 114 105 116 101 115 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 106 85 115 52 97 107 87 80 71 118 47 81 51 98 75 114 115 100 99 97 73 111 102 106 105 53 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 72 101 108 112 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 51 57 47 107 70 104 74 77 71 102 43 122 117 68 54 110 106 74 54 107 75 98 104 69 120 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 83 119 105 110 103 87 111 114 107 101 114 36 84 104 114 101 97 100 86 97 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 87 73 57 47 86 107 100 66 88 51 81 87 120 71 79 65 72 83 71 117 99 70 118 122 56 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 101 114 103 101 72 101 108 112 85 116 105 108 105 116 105 101 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 78 53 48 87 43 113 99 85 85 65 72 118 120 112 79 119 106 98 57 65 81 53 112 71 86 85 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 66 97 115 101 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 120 52 107 75 118 119 48 109 47 77 99 86 114 103 97 65 102 98 102 84 106 87 83 97 111 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 84 79 67 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 74 69 112 65 56 114 89 118 105 67 108 57 103 114 101 82 73 113 70 72 104 111 73 109 104 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 97 118 111 114 105 116 101 115 86 105 101 119 36 68 101 102 97 117 108 116 70 97 118 111 114 105 116 101 115 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 109 49 106 54 88 78 90 57 67 116 97 98 99 100 75 77 84 78 55 88 57 109 111 89 86 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 54 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 48 89 106 99 117 110 120 55 55 81 68 76 57 79 103 113 103 104 52 122 54 67 107 51 112 43 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 78 97 118 105 103 97 116 111 114 85 73 36 83 101 97 114 99 104 65 99 116 105 111 110 76 105 115 116 101 110 101 13 10 32 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 83 71 82 75 115 106 49 66 82 48 108 116 103 80 50 69 65 105 66 122 48 52 116 107 118 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 84 79 67 73 116 101 109 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 65 43 53 113 122 115 80 54 114 43 97 121 115 90 106 89 78 48 67 54 104 88 103 50 105 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 36 67 111 110 99 101 112 116 83 111 114 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 74 85 74 76 70 103 83 89 115 71 54 84 112 71 102 47 117 110 97 102 47 51 100 101 56 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 80 114 105 110 116 83 101 116 117 112 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 54 114 54 113 115 106 52 101 81 100 53 118 48 76 109 121 66 108 105 121 106 120 57 118 121 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 66 114 111 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 77 67 89 120 48 78 67 110 72 122 70 111 57 101 72 106 68 48 78 43 88 110 66 72 102 115 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 72 101 108 112 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 70 113 51 86 89 70 122 88 121 78 48 109 75 102 109 111 115 101 101 69 69 87 70 72 53 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 78 97 118 105 103 97 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 53 86 100 73 122 111 116 116 89 80 111 122 69 52 50 76 84 84 70 76 84 106 50 69 53 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 100 67 73 56 70 113 120 49 81 112 57 102 118 104 115 43 54 112 53 66 75 116 70 105 71 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 108 97 116 77 97 112 36 70 108 97 116 69 110 117 109 101 114 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 81 101 107 89 73 51 103 98 77 85 105 107 86 79 103 81 116 54 100 66 103 117 57 103 65 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 98 73 54 121 118 120 66 111 87 52 52 105 81 81 104 90 121 73 49 53 101 100 74 104 105 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 87 105 110 100 111 119 80 114 101 115 101 110 116 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 88 69 90 56 97 88 115 100 90 67 81 72 79 86 89 84 54 108 80 66 97 66 55 114 109 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 67 101 108 108 82 101 110 100 101 114 101 114 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 52 97 112 100 85 78 77 84 83 56 97 115 106 57 81 74 117 57 110 102 73 84 55 72 97 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 77 111 100 101 108 69 118 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 74 119 102 82 99 72 80 86 73 106 100 72 107 103 69 73 80 53 85 115 47 118 120 107 118 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 72 101 97 100 101 114 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 65 110 67 72 79 81 66 105 118 101 73 84 122 106 110 66 54 57 87 101 88 86 78 111 100 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 83 101 99 111 110 100 97 114 121 86 105 101 119 101 114 66 101 97 110 73 110 102 111 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 69 90 78 65 84 106 99 77 121 113 77 50 90 52 52 53 107 74 49 101 112 50 99 75 67 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 108 97 116 77 97 112 36 70 108 97 116 77 97 112 82 101 115 111 117 114 99 101 66 117 110 100 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 104 111 73 98 86 80 97 78 53 67 67 87 113 73 114 117 68 48 78 109 108 47 57 88 80 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 99 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 105 85 101 76 98 49 51 119 104 114 75 86 116 100 52 69 122 52 82 87 65 119 110 56 78 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 97 114 99 104 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 65 90 79 98 47 56 90 83 65 50 81 116 69 76 76 87 121 121 97 78 90 114 56 107 101 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 101 99 111 109 112 114 101 115 115 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 77 69 119 120 57 84 70 79 122 115 50 72 119 120 73 108 84 104 73 100 118 111 103 83 65 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 67 111 109 112 97 99 116 111 114 36 73 110 116 101 114 110 97 108 66 108 111 99 107 83 116 97 116 101 46 99 13 10 32 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 100 119 73 51 51 56 101 110 85 110 118 55 89 67 54 116 48 119 85 71 72 56 113 86 77 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 84 97 108 73 102 118 101 113 79 71 104 115 73 76 54 114 66 65 120 48 69 57 53 83 101 115 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 73 110 100 101 120 78 97 118 105 103 97 116 111 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 107 100 72 82 87 48 56 111 69 71 105 102 88 85 77 49 77 109 110 75 111 85 99 80 69 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 78 111 77 101 114 103 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 90 121 120 79 88 107 98 67 77 108 105 48 70 69 86 87 103 51 77 82 47 86 50 104 48 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 67 83 72 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 120 71 47 43 49 50 75 82 104 113 112 83 110 47 88 115 109 55 54 69 99 116 102 104 49 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 65 70 70 105 108 101 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 111 115 80 109 77 74 71 70 77 55 120 67 69 115 77 84 73 83 80 115 109 53 87 51 102 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 114 101 101 73 116 101 109 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 73 108 55 119 100 87 77 70 72 80 71 105 87 83 98 108 89 71 106 73 116 47 77 109 98 79 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 105 115 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 105 72 111 80 77 84 55 115 83 74 97 86 88 54 117 107 71 90 111 71 102 79 81 107 78 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 114 117 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 74 49 77 67 49 50 71 52 107 84 66 65 113 109 79 78 85 82 49 68 53 78 82 111 50 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 79 67 86 105 101 119 36 68 101 102 97 117 108 116 84 79 67 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 83 114 80 83 113 47 70 81 87 56 104 55 100 87 72 72 68 86 103 122 88 71 70 99 80 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 112 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 56 118 112 84 73 78 74 54 53 100 74 55 66 98 108 103 77 100 106 84 118 119 89 101 111 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 83 101 99 111 110 100 97 114 121 86 105 101 119 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 113 56 118 77 99 112 116 103 114 84 120 102 106 107 101 67 70 98 78 107 76 47 113 122 121 49 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 43 84 100 77 43 112 48 56 84 103 56 75 49 120 81 55 102 106 68 99 56 82 52 72 66 49 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 80 97 114 115 101 114 36 80 97 114 115 101 114 77 117 108 116 105 99 97 115 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 101 53 72 75 121 68 107 118 121 113 56 77 81 57 51 57 86 74 82 88 82 111 65 82 77 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 114 118 73 73 52 78 100 56 83 109 79 54 87 52 113 101 86 89 68 53 72 89 79 76 119 73 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 55 68 90 65 104 74 51 118 66 71 99 101 118 105 102 110 107 87 56 49 117 79 116 87 71 48 115 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 68 110 68 67 117 114 115 111 114 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 108 49 89 115 87 68 108 112 70 57 78 107 113 74 83 110 104 122 108 48 105 97 78 118 119 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 53 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 82 109 97 66 121 122 83 50 57 57 47 107 99 75 76 80 54 113 100 65 121 43 80 100 88 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 83 119 105 110 103 87 111 114 107 101 114 36 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 120 109 113 118 90 108 102 78 84 89 73 90 52 117 112 81 51 52 99 56 110 77 120 83 101 86 48 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 77 97 110 97 103 101 114 36 66 108 111 99 107 68 101 115 99 114 105 112 116 111 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 109 80 72 98 86 54 87 102 71 106 53 113 117 55 104 72 118 117 85 48 43 99 56 105 43 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 72 111 109 101 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 121 77 106 106 66 73 65 48 118 56 79 50 110 81 108 81 100 47 67 106 52 105 77 48 73 83 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 72 101 108 112 85 73 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 107 88 86 116 102 79 65 122 106 52 85 49 51 105 77 103 69 52 117 69 43 50 88 69 69 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 70 97 118 111 114 105 116 101 115 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 100 71 55 101 69 43 103 56 82 85 50 72 114 79 72 104 97 81 50 89 98 57 55 82 52 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 65 114 101 97 65 13 10 32 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 108 73 118 119 90 47 82 114 74 90 72 83 79 104 54 50 54 97 85 117 100 51 53 107 122 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 80 111 112 117 112 87 105 110 100 111 119 65 100 97 112 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 101 74 104 107 57 111 105 49 50 90 112 106 81 73 80 119 100 51 52 51 47 113 116 100 113 103 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 73 110 100 101 120 73 116 101 109 84 69 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 56 85 77 86 114 97 118 119 98 70 84 75 89 112 84 100 70 75 82 104 66 107 100 66 51 87 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 119 105 110 103 72 101 108 112 85 116 105 108 105 116 105 101 115 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 114 75 122 50 98 57 119 50 78 54 102 74 48 84 119 99 66 47 75 110 72 53 68 120 113 119 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 116 114 101 101 68 105 99 116 67 111 109 112 97 99 116 111 114 36 67 111 109 112 97 99 116 111 114 68 105 99 116 66 108 111 99 107 46 99 13 10 32 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 74 49 69 105 68 84 72 109 119 53 121 119 86 87 113 50 72 73 104 99 100 80 83 88 53 80 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 70 111 114 119 97 114 100 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 100 99 90 106 43 86 112 78 78 75 122 81 50 119 71 89 75 87 75 48 106 108 75 100 71 52 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 101 102 97 117 108 116 73 110 100 101 120 101 114 75 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 99 115 101 116 98 88 90 49 82 115 80 55 122 54 71 112 74 89 55 98 80 70 77 114 82 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 71 108 111 115 115 97 114 121 86 105 101 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 107 66 100 47 101 99 98 78 105 49 81 122 114 100 67 77 119 66 51 65 77 56 47 81 122 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 99 111 110 100 97 114 121 87 105 110 100 111 119 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 82 80 113 52 67 48 79 118 122 75 118 53 119 107 56 114 97 47 114 56 84 88 57 51 102 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 97 112 36 73 68 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 105 109 99 55 56 86 68 111 71 81 109 114 80 112 84 102 84 99 101 82 104 110 89 55 80 48 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 72 101 108 112 83 101 116 36 80 114 101 115 101 110 116 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 53 107 90 98 57 81 54 117 98 121 48 113 120 101 83 116 122 112 57 120 52 73 76 81 113 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 83 101 97 114 99 104 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 86 108 78 85 55 69 90 121 57 104 67 84 74 54 69 49 79 51 50 109 77 118 65 47 66 82 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 72 105 115 116 111 114 121 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 106 116 50 110 117 88 70 120 103 49 56 81 79 43 77 71 78 65 97 120 49 114 110 69 76 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 82 118 84 53 110 120 68 117 90 50 107 55 48 71 80 72 119 117 73 73 113 116 54 87 82 99 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 72 105 100 100 101 13 10 32 110 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 70 49 77 53 70 74 43 57 75 76 86 122 111 111 66 81 113 82 113 66 57 118 116 81 69 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 81 117 101 114 121 69 110 103 105 110 101 36 83 101 97 114 99 104 73 100 115 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 83 65 85 84 52 57 115 81 90 80 119 50 122 87 116 65 49 88 122 114 86 85 77 102 83 89 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 101 112 97 114 97 116 111 114 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 67 77 78 79 53 112 120 122 74 85 103 101 105 84 73 116 107 48 121 76 84 120 86 69 107 87 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 105 109 97 103 101 115 47 70 111 114 119 97 114 100 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 76 108 116 77 109 71 54 72 84 54 70 74 122 78 49 120 112 49 109 100 52 79 108 118 90 52 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 74 72 80 97 103 101 97 98 108 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 105 116 121 47 54 71 75 104 88 73 57 43 57 86 121 102 52 83 80 48 65 73 102 107 67 103 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 88 109 108 82 101 97 100 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 72 97 56 109 105 51 105 100 104 89 88 79 106 66 77 100 70 112 75 103 115 116 78 70 109 67 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 65 110 99 104 111 13 10 32 114 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 116 122 74 98 73 74 48 89 55 102 103 101 68 101 55 101 106 74 73 114 111 71 89 49 76 104 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 80 108 97 105 110 84 101 120 116 73 110 100 101 120 101 114 75 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 79 114 73 73 50 106 111 83 82 53 100 112 66 119 122 109 116 57 48 72 73 77 83 114 72 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 80 111 112 117 112 77 111 117 115 101 65 100 97 112 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 82 71 85 90 104 54 51 110 83 47 47 118 86 88 52 90 121 111 87 97 110 119 71 103 86 81 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 76 105 116 101 77 111 114 112 104 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 99 65 110 105 121 68 111 74 54 54 52 84 107 49 105 121 57 108 112 70 55 82 71 47 98 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 84 79 67 78 97 118 105 103 97 116 111 114 85 73 36 78 97 118 83 119 105 110 103 87 111 114 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 81 56 83 43 90 101 54 48 81 65 116 48 103 97 83 118 105 82 82 105 119 71 117 72 49 88 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 72 105 115 116 111 114 121 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 97 83 85 67 103 50 115 47 87 55 98 112 57 50 49 83 54 69 114 84 72 81 98 49 57 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 74 72 69 100 105 116 111 114 80 97 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 97 120 66 54 43 84 57 66 78 85 86 65 65 89 104 43 68 66 50 50 80 75 52 104 80 103 107 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 76 97 110 103 69 13 10 32 108 101 109 101 110 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 70 107 68 50 105 89 100 83 47 75 101 56 98 68 67 112 120 57 48 67 117 88 55 89 75 88 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 72 111 109 101 46 112 110 103 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 122 100 119 87 114 111 100 74 119 69 84 87 99 118 48 119 54 108 51 88 90 72 67 48 120 111 111 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 36 67 111 110 99 101 112 116 76 111 99 97 116 105 111 110 83 111 114 116 101 114 46 99 13 10 32 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 86 69 90 88 105 73 54 119 82 86 43 78 50 84 102 115 113 72 118 76 77 118 53 67 104 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 99 102 122 70 110 106 117 69 114 72 51 76 112 66 122 43 73 67 118 80 109 110 49 78 113 70 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 114 105 110 116 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 90 90 71 53 117 104 120 98 113 54 112 67 114 65 51 107 85 55 77 113 115 43 113 54 113 119 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 66 108 111 99 107 13 10 32 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 50 109 72 68 114 43 104 86 71 73 49 100 68 109 54 43 48 85 52 122 78 77 84 118 68 80 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 101 102 97 117 108 116 73 110 100 101 120 66 117 105 108 100 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 52 111 84 90 101 56 68 98 85 97 48 100 57 89 104 55 88 51 101 90 87 50 118 73 122 78 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 67 104 97 110 103 101 100 67 104 97 114 83 101 116 69 120 99 101 112 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 98 71 72 113 107 97 117 74 106 52 87 102 81 52 101 89 69 86 108 82 72 86 108 43 78 116 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 83 119 105 110 103 87 111 114 107 101 114 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 115 101 112 108 115 51 65 47 121 73 122 117 54 51 77 110 121 120 118 121 71 76 70 115 57 70 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 73 110 100 101 120 73 116 101 109 84 97 103 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 104 57 121 114 49 84 114 101 77 82 57 79 65 101 114 98 57 71 116 101 121 108 82 114 84 113 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 71 108 111 115 115 97 114 121 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 86 56 107 75 84 48 57 111 87 110 120 43 80 110 78 57 80 78 120 89 110 110 89 74 113 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 83 99 97 110 66 117 102 102 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 110 66 52 83 75 70 89 49 69 51 102 75 112 86 57 79 84 55 105 114 122 117 47 57 69 66 48 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 73 110 100 101 120 86 105 101 119 36 73 110 100 101 120 80 97 114 115 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 110 112 49 90 89 48 97 85 85 47 43 112 78 86 72 121 69 79 50 99 85 69 108 107 54 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 76 111 99 97 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 102 121 70 104 66 47 72 70 107 72 82 67 106 79 106 80 71 85 103 79 43 88 120 104 97 52 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 74 72 70 114 97 109 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 49 106 97 99 75 104 103 47 122 108 107 108 114 118 109 73 86 76 73 120 102 97 55 119 108 122 69 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 67 111 110 118 101 13 10 32 114 116 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 104 70 116 79 55 99 85 107 120 99 81 90 81 67 89 109 101 84 122 109 88 87 82 110 116 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 83 101 97 114 99 104 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 87 48 77 66 108 100 114 115 103 72 66 85 55 71 77 49 49 105 56 80 70 66 78 81 100 101 65 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 83 111 114 116 77 101 114 103 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 119 99 48 57 52 90 53 71 80 71 118 108 85 100 85 114 72 103 74 50 53 55 107 90 118 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 36 80 114 105 110 116 84 104 114 101 97 100 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 65 116 103 56 56 54 72 77 72 49 88 48 112 70 121 67 109 108 76 47 89 84 103 78 99 65 52 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 102 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 53 74 112 78 68 56 120 79 78 82 104 57 87 71 48 53 88 119 52 105 86 75 107 98 114 73 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 82 65 70 70 105 108 101 70 97 99 116 111 114 121 79 110 49 50 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 71 87 82 103 51 72 100 53 104 79 104 115 54 105 43 116 50 55 118 120 52 112 77 117 110 118 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 67 101 108 108 82 101 110 100 101 114 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 48 50 54 120 48 68 68 54 78 98 54 72 99 101 77 103 108 105 84 72 88 98 119 85 65 89 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 68 101 102 97 117 108 116 83 101 97 114 99 104 81 117 101 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 57 98 103 80 57 68 90 106 103 49 81 66 98 78 50 112 90 108 51 115 82 112 74 108 115 104 77 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 72 101 108 112 85 73 36 72 101 108 112 66 117 116 116 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 88 72 47 73 115 118 104 111 50 71 115 54 85 109 115 72 114 43 79 75 116 113 89 121 54 101 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 115 101 97 114 99 104 47 83 101 97 114 99 104 69 110 103 105 110 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 107 65 74 49 118 86 67 102 99 56 89 110 115 69 82 55 72 103 81 87 107 56 120 83 74 106 69 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 72 101 108 112 72 105 115 116 111 114 121 77 111 100 101 108 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 75 97 73 101 67 66 72 85 104 99 116 103 55 70 50 75 108 100 104 54 87 71 111 81 87 73 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 83 101 97 114 99 104 67 101 108 108 82 101 110 100 101 114 101 114 36 86 97 108 117 101 74 76 97 98 101 108 36 65 99 99 101 115 115 13 10 32 105 98 108 101 86 97 108 117 101 74 76 97 98 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 109 43 114 115 87 66 50 47 49 47 75 120 119 110 100 74 78 86 122 72 83 98 47 85 76 56 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 77 97 110 97 103 101 114 36 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 52 66 106 87 79 77 79 109 73 117 111 73 107 110 53 86 118 54 85 112 79 55 56 70 73 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 69 110 116 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 119 67 105 53 111 69 87 51 117 115 82 85 65 76 102 81 108 109 76 72 67 111 50 109 108 69 81 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 98 97 115 105 99 47 66 97 115 105 99 67 111 110 116 101 110 116 86 105 101 119 101 114 85 73 36 80 97 103 101 76 111 97 100 101 114 36 67 97 108 108 98 97 99 107 46 99 13 10 32 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 55 86 88 106 83 52 48 51 70 108 102 74 99 49 97 55 84 116 43 53 113 49 47 67 90 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 100 101 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 74 122 72 43 114 116 52 50 82 72 102 113 47 50 110 72 90 108 90 104 105 66 121 90 83 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 68 101 102 97 117 108 116 72 101 108 112 77 111 100 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 54 100 115 82 116 49 98 54 81 119 88 83 110 49 54 112 117 97 105 119 71 120 98 114 117 70 111 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 74 72 101 108 112 67 111 110 116 101 110 116 86 105 101 119 101 114 36 65 99 99 101 115 115 105 98 108 101 74 72 101 108 112 67 111 110 116 101 110 116 86 105 101 119 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 51 71 68 113 51 75 117 72 50 65 47 78 98 87 107 43 100 70 116 86 97 109 107 57 75 49 103 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 114 101 115 111 117 114 99 101 115 47 67 111 110 115 116 97 110 116 115 95 115 107 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 112 104 82 88 65 68 113 83 51 89 99 85 77 119 106 117 50 68 113 81 120 49 49 82 67 50 99 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 116 97 103 101 120 116 47 83 101 97 114 99 104 84 79 67 73 116 101 109 84 69 73 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 118 90 77 51 104 74 105 97 69 84 90 73 106 104 115 73 82 87 121 66 54 68 122 69 108 117 77 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 74 72 101 108 112 80 114 105 110 116 72 97 110 100 108 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 80 77 122 111 55 72 43 72 114 115 53 104 102 75 68 80 79 80 120 122 55 108 117 43 51 121 56 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 101 118 101 110 116 47 84 101 120 116 72 101 108 112 77 111 100 101 108 76 105 115 116 101 110 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 105 109 56 68 70 120 68 43 73 118 84 112 47 57 97 54 50 104 84 80 68 79 86 108 87 73 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 83 119 105 110 103 87 111 114 107 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 102 110 55 86 89 51 70 107 110 99 72 85 78 57 87 49 114 86 75 72 100 50 69 119 115 68 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 112 108 97 102 47 103 116 107 47 105 109 97 103 101 115 47 84 79 67 78 97 118 46 103 105 102 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 75 86 82 75 101 116 110 109 85 54 115 77 102 76 122 88 76 117 107 85 67 83 101 67 67 103 107 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 77 97 112 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 79 90 119 66 82 66 56 55 73 109 121 66 99 87 121 102 106 121 117 81 88 100 81 90 113 115 119 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 80 111 112 117 112 36 80 111 112 117 112 75 101 121 65 100 97 112 116 101 114 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 117 72 74 48 89 114 81 66 81 84 83 110 76 71 70 70 48 97 68 105 54 72 114 101 101 67 85 61 13 10 13 10 78 97 109 101 58 32 106 97 118 97 120 47 104 101 108 112 47 84 101 120 116 72 101 108 112 77 111 100 101 108 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 109 78 76 55 121 102 120 100 112 103 49 99 111 114 76 86 74 116 107 56 100 120 103 86 75 68 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 72 84 77 76 73 110 100 101 120 101 114 75 105 116 36 72 84 77 76 80 97 114 115 101 114 67 97 108 108 98 97 99 107 36 79 98 106 101 99 13 10 32 116 65 99 116 105 111 110 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 83 119 79 75 68 120 77 73 79 53 82 69 112 54 109 84 75 68 73 75 76 75 89 81 79 76 65 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 115 101 97 114 99 104 47 66 108 111 99 107 70 97 99 116 111 114 121 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 111 89 53 48 69 76 65 54 98 109 67 111 117 100 51 98 65 120 109 101 50 78 74 71 51 108 85 61 13 10 13 10 78 97 109 101 58 32 99 111 109 47 115 117 110 47 106 97 118 97 47 104 101 108 112 47 105 109 112 108 47 67 117 115 116 111 109 75 105 116 36 79 98 106 101 99 116 86 105 101 119 49 46 99 108 97 115 115 13 10 83 72 65 49 45 68 105 103 101 115 116 58 32 47 73 77 78 103 77 90 103 122 49 52 78 103 103 54 49 76 117 48 70 70 54 100 107 79 102 69 61 13 10 13 10]
1

java.security.Signature.update(byte[], int, int):::ENTER
this_invocation_nonce
337
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
277214312
1
arg0[..]

1
arg1
0
1
arg2
36551
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::ENTER
this_invocation_nonce
338
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
277214312
1
arg0[..]

1
arg1
0
1
arg2
36551
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
339
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
339
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineUpdate(byte[], int, int):::EXIT1119
this_invocation_nonce
338
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
277214312
1
arg0[..]

1
arg1
0
1
arg2
36551
1

java.security.Signature.update(byte[], int, int):::EXIT689
this_invocation_nonce
337
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
277214312
1
arg0[..]

1
arg1
0
1
arg2
36551
1

java.security.Signature.update(byte[]):::EXIT668
this_invocation_nonce
336
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
277214312
1
arg0[..]

1

java.security.Signature.verify(byte[]):::ENTER
this_invocation_nonce
340
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1553616850
1
arg0[..]
[81 24 -84 -77 70 29 -125 70 -1 45 -55 92 74 121 66 -100 -81 -19 -73 42 72 -101 47 73 111 -60 123 49 -30 26 -55 127 -106 -5 -30 -18 62 -121 118 117 88 -102 105 -71 -18 2 38 -103 11 -25 109 -121 34 -73 -82 64 73 20 47 111 -21 -33 114 29 39 -37 125 -79 -50 52 -108 -57 93 -77 90 119 -94 33 19 -102 -101 -55 -3 -40 44 50 -6 -54 -51 -111 -30 49 74 -126 -32 76 -103 -43 -46 8 -97 -86 88 -108 -30 -48 15 -13 -39 68 -108 54 -107 -30 107 17 13 -61 98 -4 -123 83 41 -78 -31 -127 -75 65 -95 111 29 -1 22 76 108 70 84 75 33 -54 -54 -93 -18 37 114 -32 103 57 11 100 -10 27 66 -30 -35 18 -112 118 121 18 46 106 43 48 124 21 -90 -113 86 -110 36 -22 -81 -21 2 -127 -81 36 -123 27 63 -21 56 -124 58 3 -75 59 16 42 0 117 89 19 93 -78 -104 77 -126 -31 112 -95 90 53 122 20 -58 46 28 -79 89 17 24 -101 74 -20 -71 45 -9 97 -32 47 69 114 -40 -1 -120 -20 92 -105 -38 -20 125 -5 -25 -21 120 -40 -10 -73 -87 -1 -25 -4 28 -11 1 -69 -119 5 16 -59 52 -61 -69 -5]
1

java.security.Signature$Delegate.engineVerify(byte[]):::ENTER
this_invocation_nonce
341
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1553616850
1
arg0[..]
[81 24 -84 -77 70 29 -125 70 -1 45 -55 92 74 121 66 -100 -81 -19 -73 42 72 -101 47 73 111 -60 123 49 -30 26 -55 127 -106 -5 -30 -18 62 -121 118 117 88 -102 105 -71 -18 2 38 -103 11 -25 109 -121 34 -73 -82 64 73 20 47 111 -21 -33 114 29 39 -37 125 -79 -50 52 -108 -57 93 -77 90 119 -94 33 19 -102 -101 -55 -3 -40 44 50 -6 -54 -51 -111 -30 49 74 -126 -32 76 -103 -43 -46 8 -97 -86 88 -108 -30 -48 15 -13 -39 68 -108 54 -107 -30 107 17 13 -61 98 -4 -123 83 41 -78 -31 -127 -75 65 -95 111 29 -1 22 76 108 70 84 75 33 -54 -54 -93 -18 37 114 -32 103 57 11 100 -10 27 66 -30 -35 18 -112 118 121 18 46 106 43 48 124 21 -90 -113 86 -110 36 -22 -81 -21 2 -127 -81 36 -123 27 63 -21 56 -124 58 3 -75 59 16 42 0 117 89 19 93 -78 -104 77 -126 -31 112 -95 90 53 122 20 -58 46 28 -79 89 17 24 -101 74 -20 -71 45 -9 97 -32 47 69 114 -40 -1 -120 -20 92 -105 -38 -20 125 -5 -25 -21 120 -40 -10 -73 -87 -1 -25 -4 28 -11 1 -69 -119 5 16 -59 52 -61 -69 -5]
1

java.security.Signature$Delegate.chooseFirstProvider():::ENTER
this_invocation_nonce
342
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.chooseFirstProvider():::EXIT957
this_invocation_nonce
342
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1

java.security.Signature$Delegate.engineVerify(byte[]):::EXIT1140
this_invocation_nonce
341
this
803438195
1
this.sigSpi
422562363
1
this.sigSpi.getClass()
"sun.security.rsa.RSASignature$MD5withRSA"
1
this.sigSpi.appRandom
null
1
this.lock
8571029
1
this.lock.getClass()
"java.lang.Object"
1
this.firstService
null
1
this.serviceIterator
null
1
this.serviceIterator.getClass()
nonsensical
2
java.security.Signature$Delegate.warnCount
10
1
arg0
1553616850
1
arg0[..]
[81 24 -84 -77 70 29 -125 70 -1 45 -55 92 74 121 66 -100 -81 -19 -73 42 72 -101 47 73 111 -60 123 49 -30 26 -55 127 -106 -5 -30 -18 62 -121 118 117 88 -102 105 -71 -18 2 38 -103 11 -25 109 -121 34 -73 -82 64 73 20 47 111 -21 -33 114 29 39 -37 125 -79 -50 52 -108 -57 93 -77 90 119 -94 33 19 -102 -101 -55 -3 -40 44 50 -6 -54 -51 -111 -30 49 74 -126 -32 76 -103 -43 -46 8 -97 -86 88 -108 -30 -48 15 -13 -39 68 -108 54 -107 -30 107 17 13 -61 98 -4 -123 83 41 -78 -31 -127 -75 65 -95 111 29 -1 22 76 108 70 84 75 33 -54 -54 -93 -18 37 114 -32 103 57 11 100 -10 27 66 -30 -35 18 -112 118 121 18 46 106 43 48 124 21 -90 -113 86 -110 36 -22 -81 -21 2 -127 -81 36 -123 27 63 -21 56 -124 58 3 -75 59 16 42 0 117 89 19 93 -78 -104 77 -126 -31 112 -95 90 53 122 20 -58 46 28 -79 89 17 24 -101 74 -20 -71 45 -9 97 -32 47 69 114 -40 -1 -120 -20 92 -105 -38 -20 125 -5 -25 -21 120 -40 -10 -73 -87 -1 -25 -4 28 -11 1 -69 -119 5 16 -59 52 -61 -69 -5]
1
return
true
1

java.security.Signature.verify(byte[]):::EXIT592
this_invocation_nonce
340
this
803438195
1
this.getClass()
"java.security.Signature$Delegate"
1
java.security.Signature.debug
null
1
this.algorithm
425429203
1
this.algorithm.toString
"MD5withRSA"
1
this.provider
1896997472
1
this.provider.getClass()
"sun.security.rsa.SunRsaSign"
1
this.state
3
1
java.security.Signature.RSA_SIGNATURE
1154288051
1
java.security.Signature.RSA_SIGNATURE.toString
"NONEwithRSA"
1
java.security.Signature.RSA_CIPHER
1899489806
1
java.security.Signature.RSA_CIPHER.toString
"RSA/ECB/PKCS1Padding"
1
java.security.Signature.rsaIds
233273140
1
java.security.Signature.rsaIds[..]
[1464008205 1865757756 234391598 934578988 773657158]
1
java.security.Signature.rsaIds[..].getClass()
["sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId" "sun.security.jca.ServiceId"]
1
java.security.Signature.rsaIds.getClass()
"java.util.Arrays$ArrayList"
1
java.security.Signature.signatureInfo
1989855568
1
java.security.Signature.signatureInfo.getClass()
"java.util.concurrent.ConcurrentHashMap"
1
arg0
1553616850
1
arg0[..]
[81 24 -84 -77 70 29 -125 70 -1 45 -55 92 74 121 66 -100 -81 -19 -73 42 72 -101 47 73 111 -60 123 49 -30 26 -55 127 -106 -5 -30 -18 62 -121 118 117 88 -102 105 -71 -18 2 38 -103 11 -25 109 -121 34 -73 -82 64 73 20 47 111 -21 -33 114 29 39 -37 125 -79 -50 52 -108 -57 93 -77 90 119 -94 33 19 -102 -101 -55 -3 -40 44 50 -6 -54 -51 -111 -30 49 74 -126 -32 76 -103 -43 -46 8 -97 -86 88 -108 -30 -48 15 -13 -39 68 -108 54 -107 -30 107 17 13 -61 98 -4 -123 83 41 -78 -31 -127 -75 65 -95 111 29 -1 22 76 108 70 84 75 33 -54 -54 -93 -18 37 114 -32 103 57 11 100 -10 27 66 -30 -35 18 -112 118 121 18 46 106 43 48 124 21 -90 -113 86 -110 36 -22 -81 -21 2 -127 -81 36 -123 27 63 -21 56 -124 58 3 -75 59 16 42 0 117 89 19 93 -78 -104 77 -126 -31 112 -95 90 53 122 20 -58 46 28 -79 89 17 24 -101 74 -20 -71 45 -9 97 -32 47 69 114 -40 -1 -120 -20 92 -105 -38 -20 125 -5 -25 -21 120 -40 -10 -73 -87 -1 -25 -4 28 -11 1 -69 -119 5 16 -59 52 -61 -69 -5]
1
return
true
1


# ppt-select-pattern: ^java\.security\.Signature
# EOF (added by Runtime.addShutdownHook)
